// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: expl.proto

#ifndef PROTOBUF_expl_2eproto__INCLUDED
#define PROTOBUF_expl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_expl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsExplGraphImpl();
void InitDefaultsExplGraph();
void InitDefaultsExplGraphGoalImpl();
void InitDefaultsExplGraphGoal();
void InitDefaultsExplGraphPathImpl();
void InitDefaultsExplGraphPath();
void InitDefaultsExplGraphNodeImpl();
void InitDefaultsExplGraphNode();
void InitDefaultsGoalTermImpl();
void InitDefaultsGoalTerm();
void InitDefaultsValueImpl();
void InitDefaultsValue();
void InitDefaultsSwInsImpl();
void InitDefaultsSwIns();
void InitDefaultsRootImpl();
void InitDefaultsRoot();
void InitDefaultsRankRootImpl();
void InitDefaultsRankRoot();
inline void InitDefaults() {
  InitDefaultsExplGraph();
  InitDefaultsExplGraphGoal();
  InitDefaultsExplGraphPath();
  InitDefaultsExplGraphNode();
  InitDefaultsGoalTerm();
  InitDefaultsValue();
  InitDefaultsSwIns();
  InitDefaultsRoot();
  InitDefaultsRankRoot();
}
}  // namespace protobuf_expl_2eproto
namespace prism {
class ExplGraph;
class ExplGraphDefaultTypeInternal;
extern ExplGraphDefaultTypeInternal _ExplGraph_default_instance_;
class ExplGraphGoal;
class ExplGraphGoalDefaultTypeInternal;
extern ExplGraphGoalDefaultTypeInternal _ExplGraphGoal_default_instance_;
class ExplGraphNode;
class ExplGraphNodeDefaultTypeInternal;
extern ExplGraphNodeDefaultTypeInternal _ExplGraphNode_default_instance_;
class ExplGraphPath;
class ExplGraphPathDefaultTypeInternal;
extern ExplGraphPathDefaultTypeInternal _ExplGraphPath_default_instance_;
class GoalTerm;
class GoalTermDefaultTypeInternal;
extern GoalTermDefaultTypeInternal _GoalTerm_default_instance_;
class RankRoot;
class RankRootDefaultTypeInternal;
extern RankRootDefaultTypeInternal _RankRoot_default_instance_;
class Root;
class RootDefaultTypeInternal;
extern RootDefaultTypeInternal _Root_default_instance_;
class SwIns;
class SwInsDefaultTypeInternal;
extern SwInsDefaultTypeInternal _SwIns_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace prism
namespace prism {

// ===================================================================

class ExplGraph : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.ExplGraph) */ {
 public:
  ExplGraph();
  virtual ~ExplGraph();

  ExplGraph(const ExplGraph& from);

  inline ExplGraph& operator=(const ExplGraph& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplGraph(ExplGraph&& from) noexcept
    : ExplGraph() {
    *this = ::std::move(from);
  }

  inline ExplGraph& operator=(ExplGraph&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplGraph& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplGraph* internal_default_instance() {
    return reinterpret_cast<const ExplGraph*>(
               &_ExplGraph_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ExplGraph* other);
  friend void swap(ExplGraph& a, ExplGraph& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplGraph* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplGraph* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplGraph& from);
  void MergeFrom(const ExplGraph& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplGraph* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prism.ExplGraphGoal goals = 1;
  int goals_size() const;
  void clear_goals();
  static const int kGoalsFieldNumber = 1;
  const ::prism::ExplGraphGoal& goals(int index) const;
  ::prism::ExplGraphGoal* mutable_goals(int index);
  ::prism::ExplGraphGoal* add_goals();
  ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal >*
      mutable_goals();
  const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal >&
      goals() const;

  // repeated .prism.RankRoot root_list = 2;
  int root_list_size() const;
  void clear_root_list();
  static const int kRootListFieldNumber = 2;
  const ::prism::RankRoot& root_list(int index) const;
  ::prism::RankRoot* mutable_root_list(int index);
  ::prism::RankRoot* add_root_list();
  ::google::protobuf::RepeatedPtrField< ::prism::RankRoot >*
      mutable_root_list();
  const ::google::protobuf::RepeatedPtrField< ::prism::RankRoot >&
      root_list() const;

  // @@protoc_insertion_point(class_scope:prism.ExplGraph)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal > goals_;
  ::google::protobuf::RepeatedPtrField< ::prism::RankRoot > root_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsExplGraphImpl();
};
// -------------------------------------------------------------------

class ExplGraphGoal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.ExplGraphGoal) */ {
 public:
  ExplGraphGoal();
  virtual ~ExplGraphGoal();

  ExplGraphGoal(const ExplGraphGoal& from);

  inline ExplGraphGoal& operator=(const ExplGraphGoal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplGraphGoal(ExplGraphGoal&& from) noexcept
    : ExplGraphGoal() {
    *this = ::std::move(from);
  }

  inline ExplGraphGoal& operator=(ExplGraphGoal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplGraphGoal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplGraphGoal* internal_default_instance() {
    return reinterpret_cast<const ExplGraphGoal*>(
               &_ExplGraphGoal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ExplGraphGoal* other);
  friend void swap(ExplGraphGoal& a, ExplGraphGoal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplGraphGoal* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplGraphGoal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplGraphGoal& from);
  void MergeFrom(const ExplGraphGoal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplGraphGoal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prism.ExplGraphPath paths = 2;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 2;
  const ::prism::ExplGraphPath& paths(int index) const;
  ::prism::ExplGraphPath* mutable_paths(int index);
  ::prism::ExplGraphPath* add_paths();
  ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath >*
      mutable_paths();
  const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath >&
      paths() const;

  // .prism.ExplGraphNode node = 1;
  bool has_node() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::prism::ExplGraphNode& node() const;
  ::prism::ExplGraphNode* release_node();
  ::prism::ExplGraphNode* mutable_node();
  void set_allocated_node(::prism::ExplGraphNode* node);

  // @@protoc_insertion_point(class_scope:prism.ExplGraphGoal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath > paths_;
  ::prism::ExplGraphNode* node_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsExplGraphGoalImpl();
};
// -------------------------------------------------------------------

class ExplGraphPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.ExplGraphPath) */ {
 public:
  ExplGraphPath();
  virtual ~ExplGraphPath();

  ExplGraphPath(const ExplGraphPath& from);

  inline ExplGraphPath& operator=(const ExplGraphPath& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplGraphPath(ExplGraphPath&& from) noexcept
    : ExplGraphPath() {
    *this = ::std::move(from);
  }

  inline ExplGraphPath& operator=(ExplGraphPath&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplGraphPath& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplGraphPath* internal_default_instance() {
    return reinterpret_cast<const ExplGraphPath*>(
               &_ExplGraphPath_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ExplGraphPath* other);
  friend void swap(ExplGraphPath& a, ExplGraphPath& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplGraphPath* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplGraphPath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplGraphPath& from);
  void MergeFrom(const ExplGraphPath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplGraphPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prism.ExplGraphNode nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  const ::prism::ExplGraphNode& nodes(int index) const;
  ::prism::ExplGraphNode* mutable_nodes(int index);
  ::prism::ExplGraphNode* add_nodes();
  ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode >*
      mutable_nodes();
  const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode >&
      nodes() const;

  // repeated .prism.SwIns sws = 2;
  int sws_size() const;
  void clear_sws();
  static const int kSwsFieldNumber = 2;
  const ::prism::SwIns& sws(int index) const;
  ::prism::SwIns* mutable_sws(int index);
  ::prism::SwIns* add_sws();
  ::google::protobuf::RepeatedPtrField< ::prism::SwIns >*
      mutable_sws();
  const ::google::protobuf::RepeatedPtrField< ::prism::SwIns >&
      sws() const;

  // @@protoc_insertion_point(class_scope:prism.ExplGraphPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode > nodes_;
  ::google::protobuf::RepeatedPtrField< ::prism::SwIns > sws_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsExplGraphPathImpl();
};
// -------------------------------------------------------------------

class ExplGraphNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.ExplGraphNode) */ {
 public:
  ExplGraphNode();
  virtual ~ExplGraphNode();

  ExplGraphNode(const ExplGraphNode& from);

  inline ExplGraphNode& operator=(const ExplGraphNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplGraphNode(ExplGraphNode&& from) noexcept
    : ExplGraphNode() {
    *this = ::std::move(from);
  }

  inline ExplGraphNode& operator=(ExplGraphNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplGraphNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplGraphNode* internal_default_instance() {
    return reinterpret_cast<const ExplGraphNode*>(
               &_ExplGraphNode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ExplGraphNode* other);
  friend void swap(ExplGraphNode& a, ExplGraphNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplGraphNode* New() const PROTOBUF_FINAL { return New(NULL); }

  ExplGraphNode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExplGraphNode& from);
  void MergeFrom(const ExplGraphNode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExplGraphNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .prism.GoalTerm goal = 3;
  bool has_goal() const;
  void clear_goal();
  static const int kGoalFieldNumber = 3;
  const ::prism::GoalTerm& goal() const;
  ::prism::GoalTerm* release_goal();
  ::prism::GoalTerm* mutable_goal();
  void set_allocated_goal(::prism::GoalTerm* goal);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 sorted_id = 2;
  void clear_sorted_id();
  static const int kSortedIdFieldNumber = 2;
  ::google::protobuf::int32 sorted_id() const;
  void set_sorted_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:prism.ExplGraphNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::prism::GoalTerm* goal_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sorted_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsExplGraphNodeImpl();
};
// -------------------------------------------------------------------

class GoalTerm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.GoalTerm) */ {
 public:
  GoalTerm();
  virtual ~GoalTerm();

  GoalTerm(const GoalTerm& from);

  inline GoalTerm& operator=(const GoalTerm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalTerm(GoalTerm&& from) noexcept
    : GoalTerm() {
    *this = ::std::move(from);
  }

  inline GoalTerm& operator=(GoalTerm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalTerm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalTerm* internal_default_instance() {
    return reinterpret_cast<const GoalTerm*>(
               &_GoalTerm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GoalTerm* other);
  friend void swap(GoalTerm& a, GoalTerm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalTerm* New() const PROTOBUF_FINAL { return New(NULL); }

  GoalTerm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GoalTerm& from);
  void MergeFrom(const GoalTerm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GoalTerm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string args = 2;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 2;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_args(int index, ::std::string&& value);
  #endif
  void set_args(int index, const char* value);
  void set_args(int index, const char* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  #if LANG_CXX11
  void add_args(::std::string&& value);
  #endif
  void add_args(const char* value);
  void add_args(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:prism.GoalTerm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsGoalTermImpl();
};
// -------------------------------------------------------------------

class Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value(Value&& from) noexcept
    : Value() {
    *this = ::std::move(from);
  }

  inline Value& operator=(Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
               &_Value_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Value* other);
  friend void swap(Value& a, Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value* New() const PROTOBUF_FINAL { return New(NULL); }

  Value* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::std::string& list(int index) const;
  ::std::string* mutable_list(int index);
  void set_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_list(int index, ::std::string&& value);
  #endif
  void set_list(int index, const char* value);
  void set_list(int index, const char* value, size_t size);
  ::std::string* add_list();
  void add_list(const ::std::string& value);
  #if LANG_CXX11
  void add_list(::std::string&& value);
  #endif
  void add_list(const char* value);
  void add_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_list();

  // @@protoc_insertion_point(class_scope:prism.Value)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> list_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsValueImpl();
};
// -------------------------------------------------------------------

class SwIns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.SwIns) */ {
 public:
  SwIns();
  virtual ~SwIns();

  SwIns(const SwIns& from);

  inline SwIns& operator=(const SwIns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SwIns(SwIns&& from) noexcept
    : SwIns() {
    *this = ::std::move(from);
  }

  inline SwIns& operator=(SwIns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SwIns& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SwIns* internal_default_instance() {
    return reinterpret_cast<const SwIns*>(
               &_SwIns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SwIns* other);
  friend void swap(SwIns& a, SwIns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SwIns* New() const PROTOBUF_FINAL { return New(NULL); }

  SwIns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwIns& from);
  void MergeFrom(const SwIns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwIns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .prism.Value value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::prism::Value& value() const;
  ::prism::Value* release_value();
  ::prism::Value* mutable_value();
  void set_allocated_value(::prism::Value* value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:prism.SwIns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::prism::Value* value_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsSwInsImpl();
};
// -------------------------------------------------------------------

class Root : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.Root) */ {
 public:
  Root();
  virtual ~Root();

  Root(const Root& from);

  inline Root& operator=(const Root& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Root(Root&& from) noexcept
    : Root() {
    *this = ::std::move(from);
  }

  inline Root& operator=(Root&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Root& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Root* internal_default_instance() {
    return reinterpret_cast<const Root*>(
               &_Root_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Root* other);
  friend void swap(Root& a, Root& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Root* New() const PROTOBUF_FINAL { return New(NULL); }

  Root* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Root& from);
  void MergeFrom(const Root& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Root* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 sorted_id = 2;
  void clear_sorted_id();
  static const int kSortedIdFieldNumber = 2;
  ::google::protobuf::int32 sorted_id() const;
  void set_sorted_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:prism.Root)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sorted_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsRootImpl();
};
// -------------------------------------------------------------------

class RankRoot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prism.RankRoot) */ {
 public:
  RankRoot();
  virtual ~RankRoot();

  RankRoot(const RankRoot& from);

  inline RankRoot& operator=(const RankRoot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RankRoot(RankRoot&& from) noexcept
    : RankRoot() {
    *this = ::std::move(from);
  }

  inline RankRoot& operator=(RankRoot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RankRoot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RankRoot* internal_default_instance() {
    return reinterpret_cast<const RankRoot*>(
               &_RankRoot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(RankRoot* other);
  friend void swap(RankRoot& a, RankRoot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RankRoot* New() const PROTOBUF_FINAL { return New(NULL); }

  RankRoot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RankRoot& from);
  void MergeFrom(const RankRoot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RankRoot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prism.Root roots = 1;
  int roots_size() const;
  void clear_roots();
  static const int kRootsFieldNumber = 1;
  const ::prism::Root& roots(int index) const;
  ::prism::Root* mutable_roots(int index);
  ::prism::Root* add_roots();
  ::google::protobuf::RepeatedPtrField< ::prism::Root >*
      mutable_roots();
  const ::google::protobuf::RepeatedPtrField< ::prism::Root >&
      roots() const;

  // int32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:prism.RankRoot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prism::Root > roots_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_expl_2eproto::TableStruct;
  friend void ::protobuf_expl_2eproto::InitDefaultsRankRootImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExplGraph

// repeated .prism.ExplGraphGoal goals = 1;
inline int ExplGraph::goals_size() const {
  return goals_.size();
}
inline void ExplGraph::clear_goals() {
  goals_.Clear();
}
inline const ::prism::ExplGraphGoal& ExplGraph::goals(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraph.goals)
  return goals_.Get(index);
}
inline ::prism::ExplGraphGoal* ExplGraph::mutable_goals(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraph.goals)
  return goals_.Mutable(index);
}
inline ::prism::ExplGraphGoal* ExplGraph::add_goals() {
  // @@protoc_insertion_point(field_add:prism.ExplGraph.goals)
  return goals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal >*
ExplGraph::mutable_goals() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraph.goals)
  return &goals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal >&
ExplGraph::goals() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraph.goals)
  return goals_;
}

// repeated .prism.RankRoot root_list = 2;
inline int ExplGraph::root_list_size() const {
  return root_list_.size();
}
inline void ExplGraph::clear_root_list() {
  root_list_.Clear();
}
inline const ::prism::RankRoot& ExplGraph::root_list(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraph.root_list)
  return root_list_.Get(index);
}
inline ::prism::RankRoot* ExplGraph::mutable_root_list(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraph.root_list)
  return root_list_.Mutable(index);
}
inline ::prism::RankRoot* ExplGraph::add_root_list() {
  // @@protoc_insertion_point(field_add:prism.ExplGraph.root_list)
  return root_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prism::RankRoot >*
ExplGraph::mutable_root_list() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraph.root_list)
  return &root_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prism::RankRoot >&
ExplGraph::root_list() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraph.root_list)
  return root_list_;
}

// -------------------------------------------------------------------

// ExplGraphGoal

// .prism.ExplGraphNode node = 1;
inline bool ExplGraphGoal::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
inline void ExplGraphGoal::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
}
inline const ::prism::ExplGraphNode& ExplGraphGoal::node() const {
  const ::prism::ExplGraphNode* p = node_;
  // @@protoc_insertion_point(field_get:prism.ExplGraphGoal.node)
  return p != NULL ? *p : *reinterpret_cast<const ::prism::ExplGraphNode*>(
      &::prism::_ExplGraphNode_default_instance_);
}
inline ::prism::ExplGraphNode* ExplGraphGoal::release_node() {
  // @@protoc_insertion_point(field_release:prism.ExplGraphGoal.node)
  
  ::prism::ExplGraphNode* temp = node_;
  node_ = NULL;
  return temp;
}
inline ::prism::ExplGraphNode* ExplGraphGoal::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::prism::ExplGraphNode;
  }
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphGoal.node)
  return node_;
}
inline void ExplGraphGoal::set_allocated_node(::prism::ExplGraphNode* node) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete node_;
  }
  if (node) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      node = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, node, submessage_arena);
    }
    
  } else {
    
  }
  node_ = node;
  // @@protoc_insertion_point(field_set_allocated:prism.ExplGraphGoal.node)
}

// repeated .prism.ExplGraphPath paths = 2;
inline int ExplGraphGoal::paths_size() const {
  return paths_.size();
}
inline void ExplGraphGoal::clear_paths() {
  paths_.Clear();
}
inline const ::prism::ExplGraphPath& ExplGraphGoal::paths(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphGoal.paths)
  return paths_.Get(index);
}
inline ::prism::ExplGraphPath* ExplGraphGoal::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphGoal.paths)
  return paths_.Mutable(index);
}
inline ::prism::ExplGraphPath* ExplGraphGoal::add_paths() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphGoal.paths)
  return paths_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath >*
ExplGraphGoal::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphGoal.paths)
  return &paths_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath >&
ExplGraphGoal::paths() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphGoal.paths)
  return paths_;
}

// -------------------------------------------------------------------

// ExplGraphPath

// repeated .prism.ExplGraphNode nodes = 1;
inline int ExplGraphPath::nodes_size() const {
  return nodes_.size();
}
inline void ExplGraphPath::clear_nodes() {
  nodes_.Clear();
}
inline const ::prism::ExplGraphNode& ExplGraphPath::nodes(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphPath.nodes)
  return nodes_.Get(index);
}
inline ::prism::ExplGraphNode* ExplGraphPath::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphPath.nodes)
  return nodes_.Mutable(index);
}
inline ::prism::ExplGraphNode* ExplGraphPath::add_nodes() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphPath.nodes)
  return nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode >*
ExplGraphPath::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphPath.nodes)
  return &nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode >&
ExplGraphPath::nodes() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphPath.nodes)
  return nodes_;
}

// repeated .prism.SwIns sws = 2;
inline int ExplGraphPath::sws_size() const {
  return sws_.size();
}
inline void ExplGraphPath::clear_sws() {
  sws_.Clear();
}
inline const ::prism::SwIns& ExplGraphPath::sws(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphPath.sws)
  return sws_.Get(index);
}
inline ::prism::SwIns* ExplGraphPath::mutable_sws(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphPath.sws)
  return sws_.Mutable(index);
}
inline ::prism::SwIns* ExplGraphPath::add_sws() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphPath.sws)
  return sws_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prism::SwIns >*
ExplGraphPath::mutable_sws() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphPath.sws)
  return &sws_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prism::SwIns >&
ExplGraphPath::sws() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphPath.sws)
  return sws_;
}

// -------------------------------------------------------------------

// ExplGraphNode

// int32 id = 1;
inline void ExplGraphNode::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ExplGraphNode::id() const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphNode.id)
  return id_;
}
inline void ExplGraphNode::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.ExplGraphNode.id)
}

// int32 sorted_id = 2;
inline void ExplGraphNode::clear_sorted_id() {
  sorted_id_ = 0;
}
inline ::google::protobuf::int32 ExplGraphNode::sorted_id() const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphNode.sorted_id)
  return sorted_id_;
}
inline void ExplGraphNode::set_sorted_id(::google::protobuf::int32 value) {
  
  sorted_id_ = value;
  // @@protoc_insertion_point(field_set:prism.ExplGraphNode.sorted_id)
}

// .prism.GoalTerm goal = 3;
inline bool ExplGraphNode::has_goal() const {
  return this != internal_default_instance() && goal_ != NULL;
}
inline void ExplGraphNode::clear_goal() {
  if (GetArenaNoVirtual() == NULL && goal_ != NULL) {
    delete goal_;
  }
  goal_ = NULL;
}
inline const ::prism::GoalTerm& ExplGraphNode::goal() const {
  const ::prism::GoalTerm* p = goal_;
  // @@protoc_insertion_point(field_get:prism.ExplGraphNode.goal)
  return p != NULL ? *p : *reinterpret_cast<const ::prism::GoalTerm*>(
      &::prism::_GoalTerm_default_instance_);
}
inline ::prism::GoalTerm* ExplGraphNode::release_goal() {
  // @@protoc_insertion_point(field_release:prism.ExplGraphNode.goal)
  
  ::prism::GoalTerm* temp = goal_;
  goal_ = NULL;
  return temp;
}
inline ::prism::GoalTerm* ExplGraphNode::mutable_goal() {
  
  if (goal_ == NULL) {
    goal_ = new ::prism::GoalTerm;
  }
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphNode.goal)
  return goal_;
}
inline void ExplGraphNode::set_allocated_goal(::prism::GoalTerm* goal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete goal_;
  }
  if (goal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      goal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, goal, submessage_arena);
    }
    
  } else {
    
  }
  goal_ = goal;
  // @@protoc_insertion_point(field_set_allocated:prism.ExplGraphNode.goal)
}

// -------------------------------------------------------------------

// GoalTerm

// string name = 1;
inline void GoalTerm::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GoalTerm::name() const {
  // @@protoc_insertion_point(field_get:prism.GoalTerm.name)
  return name_.GetNoArena();
}
inline void GoalTerm::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.GoalTerm.name)
}
#if LANG_CXX11
inline void GoalTerm::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prism.GoalTerm.name)
}
#endif
inline void GoalTerm::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.GoalTerm.name)
}
inline void GoalTerm::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.GoalTerm.name)
}
inline ::std::string* GoalTerm::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:prism.GoalTerm.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GoalTerm::release_name() {
  // @@protoc_insertion_point(field_release:prism.GoalTerm.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GoalTerm::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:prism.GoalTerm.name)
}

// repeated string args = 2;
inline int GoalTerm::args_size() const {
  return args_.size();
}
inline void GoalTerm::clear_args() {
  args_.Clear();
}
inline const ::std::string& GoalTerm::args(int index) const {
  // @@protoc_insertion_point(field_get:prism.GoalTerm.args)
  return args_.Get(index);
}
inline ::std::string* GoalTerm::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:prism.GoalTerm.args)
  return args_.Mutable(index);
}
inline void GoalTerm::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:prism.GoalTerm.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GoalTerm::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:prism.GoalTerm.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GoalTerm::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:prism.GoalTerm.args)
}
inline void GoalTerm::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:prism.GoalTerm.args)
}
inline ::std::string* GoalTerm::add_args() {
  // @@protoc_insertion_point(field_add_mutable:prism.GoalTerm.args)
  return args_.Add();
}
inline void GoalTerm::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:prism.GoalTerm.args)
}
#if LANG_CXX11
inline void GoalTerm::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:prism.GoalTerm.args)
}
#endif
inline void GoalTerm::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:prism.GoalTerm.args)
}
inline void GoalTerm::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:prism.GoalTerm.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GoalTerm::args() const {
  // @@protoc_insertion_point(field_list:prism.GoalTerm.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GoalTerm::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:prism.GoalTerm.args)
  return &args_;
}

// -------------------------------------------------------------------

// Value

// repeated string list = 1;
inline int Value::list_size() const {
  return list_.size();
}
inline void Value::clear_list() {
  list_.Clear();
}
inline const ::std::string& Value::list(int index) const {
  // @@protoc_insertion_point(field_get:prism.Value.list)
  return list_.Get(index);
}
inline ::std::string* Value::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:prism.Value.list)
  return list_.Mutable(index);
}
inline void Value::set_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:prism.Value.list)
  list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Value::set_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:prism.Value.list)
  list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Value::set_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:prism.Value.list)
}
inline void Value::set_list(int index, const char* value, size_t size) {
  list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:prism.Value.list)
}
inline ::std::string* Value::add_list() {
  // @@protoc_insertion_point(field_add_mutable:prism.Value.list)
  return list_.Add();
}
inline void Value::add_list(const ::std::string& value) {
  list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:prism.Value.list)
}
#if LANG_CXX11
inline void Value::add_list(::std::string&& value) {
  list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:prism.Value.list)
}
#endif
inline void Value::add_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:prism.Value.list)
}
inline void Value::add_list(const char* value, size_t size) {
  list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:prism.Value.list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Value::list() const {
  // @@protoc_insertion_point(field_list:prism.Value.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Value::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:prism.Value.list)
  return &list_;
}

// -------------------------------------------------------------------

// SwIns

// int32 id = 1;
inline void SwIns::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 SwIns::id() const {
  // @@protoc_insertion_point(field_get:prism.SwIns.id)
  return id_;
}
inline void SwIns::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.SwIns.id)
}

// string name = 2;
inline void SwIns::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SwIns::name() const {
  // @@protoc_insertion_point(field_get:prism.SwIns.name)
  return name_.GetNoArena();
}
inline void SwIns::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.SwIns.name)
}
#if LANG_CXX11
inline void SwIns::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prism.SwIns.name)
}
#endif
inline void SwIns::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.SwIns.name)
}
inline void SwIns::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.SwIns.name)
}
inline ::std::string* SwIns::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:prism.SwIns.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwIns::release_name() {
  // @@protoc_insertion_point(field_release:prism.SwIns.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwIns::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:prism.SwIns.name)
}

// .prism.Value value = 3;
inline bool SwIns::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void SwIns::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::prism::Value& SwIns::value() const {
  const ::prism::Value* p = value_;
  // @@protoc_insertion_point(field_get:prism.SwIns.value)
  return p != NULL ? *p : *reinterpret_cast<const ::prism::Value*>(
      &::prism::_Value_default_instance_);
}
inline ::prism::Value* SwIns::release_value() {
  // @@protoc_insertion_point(field_release:prism.SwIns.value)
  
  ::prism::Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::prism::Value* SwIns::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::prism::Value;
  }
  // @@protoc_insertion_point(field_mutable:prism.SwIns.value)
  return value_;
}
inline void SwIns::set_allocated_value(::prism::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:prism.SwIns.value)
}

// -------------------------------------------------------------------

// Root

// int32 id = 1;
inline void Root::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Root::id() const {
  // @@protoc_insertion_point(field_get:prism.Root.id)
  return id_;
}
inline void Root::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.Root.id)
}

// int32 sorted_id = 2;
inline void Root::clear_sorted_id() {
  sorted_id_ = 0;
}
inline ::google::protobuf::int32 Root::sorted_id() const {
  // @@protoc_insertion_point(field_get:prism.Root.sorted_id)
  return sorted_id_;
}
inline void Root::set_sorted_id(::google::protobuf::int32 value) {
  
  sorted_id_ = value;
  // @@protoc_insertion_point(field_set:prism.Root.sorted_id)
}

// -------------------------------------------------------------------

// RankRoot

// repeated .prism.Root roots = 1;
inline int RankRoot::roots_size() const {
  return roots_.size();
}
inline void RankRoot::clear_roots() {
  roots_.Clear();
}
inline const ::prism::Root& RankRoot::roots(int index) const {
  // @@protoc_insertion_point(field_get:prism.RankRoot.roots)
  return roots_.Get(index);
}
inline ::prism::Root* RankRoot::mutable_roots(int index) {
  // @@protoc_insertion_point(field_mutable:prism.RankRoot.roots)
  return roots_.Mutable(index);
}
inline ::prism::Root* RankRoot::add_roots() {
  // @@protoc_insertion_point(field_add:prism.RankRoot.roots)
  return roots_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prism::Root >*
RankRoot::mutable_roots() {
  // @@protoc_insertion_point(field_mutable_list:prism.RankRoot.roots)
  return &roots_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prism::Root >&
RankRoot::roots() const {
  // @@protoc_insertion_point(field_list:prism.RankRoot.roots)
  return roots_;
}

// int32 count = 2;
inline void RankRoot::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 RankRoot::count() const {
  // @@protoc_insertion_point(field_get:prism.RankRoot.count)
  return count_;
}
inline void RankRoot::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:prism.RankRoot.count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prism

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_expl_2eproto__INCLUDED
