// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: expl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "expl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace prism {

namespace {

const ::google::protobuf::Descriptor* PlaceholderData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlaceholderData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlaceholderGoal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlaceholderGoal_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* Placeholder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Placeholder_reflection_ = NULL;
const ::google::protobuf::Descriptor* Option_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Option_reflection_ = NULL;
const ::google::protobuf::Descriptor* Flag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Flag_reflection_ = NULL;
const ::google::protobuf::Descriptor* IndexRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IndexRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorShape_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorShape_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExplGraph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExplGraph_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExplGraphGoal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExplGraphGoal_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExplGraphPath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExplGraphPath_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExplGraphNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExplGraphNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoalTerm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoalTerm_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwIns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwIns_reflection_ = NULL;
const ::google::protobuf::Descriptor* Root_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Root_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankRoot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankRoot_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SwType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_expl_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_expl_2eproto() {
  protobuf_AddDesc_expl_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "expl.proto");
  GOOGLE_CHECK(file != NULL);
  PlaceholderData_descriptor_ = file->message_type(0);
  static const int PlaceholderData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderData, goals_),
  };
  PlaceholderData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlaceholderData_descriptor_,
      PlaceholderData::default_instance_,
      PlaceholderData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlaceholderData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderData, _is_default_instance_));
  PlaceholderGoal_descriptor_ = file->message_type(1);
  static const int PlaceholderGoal_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderGoal, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderGoal, placeholders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderGoal, records_),
  };
  PlaceholderGoal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlaceholderGoal_descriptor_,
      PlaceholderGoal::default_instance_,
      PlaceholderGoal_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlaceholderGoal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderGoal, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceholderGoal, _is_default_instance_));
  DataRecord_descriptor_ = file->message_type(2);
  static const int DataRecord_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRecord, items_),
  };
  DataRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataRecord_descriptor_,
      DataRecord::default_instance_,
      DataRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(DataRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRecord, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRecord, _is_default_instance_));
  Placeholder_descriptor_ = file->message_type(3);
  static const int Placeholder_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Placeholder, name_),
  };
  Placeholder_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Placeholder_descriptor_,
      Placeholder::default_instance_,
      Placeholder_offsets_,
      -1,
      -1,
      -1,
      sizeof(Placeholder),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Placeholder, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Placeholder, _is_default_instance_));
  Option_descriptor_ = file->message_type(4);
  static const int Option_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Option, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Option, index_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Option, tensor_shape_),
  };
  Option_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Option_descriptor_,
      Option::default_instance_,
      Option_offsets_,
      -1,
      -1,
      -1,
      sizeof(Option),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Option, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Option, _is_default_instance_));
  Flag_descriptor_ = file->message_type(5);
  static const int Flag_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Flag, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Flag, value_),
  };
  Flag_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Flag_descriptor_,
      Flag::default_instance_,
      Flag_offsets_,
      -1,
      -1,
      -1,
      sizeof(Flag),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Flag, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Flag, _is_default_instance_));
  IndexRange_descriptor_ = file->message_type(6);
  static const int IndexRange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRange, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRange, range_),
  };
  IndexRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IndexRange_descriptor_,
      IndexRange::default_instance_,
      IndexRange_offsets_,
      -1,
      -1,
      -1,
      sizeof(IndexRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRange, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRange, _is_default_instance_));
  TensorShape_descriptor_ = file->message_type(7);
  static const int TensorShape_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShape, tensor_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShape, shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShape, type_),
  };
  TensorShape_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TensorShape_descriptor_,
      TensorShape::default_instance_,
      TensorShape_offsets_,
      -1,
      -1,
      -1,
      sizeof(TensorShape),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShape, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShape, _is_default_instance_));
  ExplGraph_descriptor_ = file->message_type(8);
  static const int ExplGraph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraph, goals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraph, root_list_),
  };
  ExplGraph_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExplGraph_descriptor_,
      ExplGraph::default_instance_,
      ExplGraph_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExplGraph),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraph, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraph, _is_default_instance_));
  ExplGraphGoal_descriptor_ = file->message_type(9);
  static const int ExplGraphGoal_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphGoal, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphGoal, paths_),
  };
  ExplGraphGoal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExplGraphGoal_descriptor_,
      ExplGraphGoal::default_instance_,
      ExplGraphGoal_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExplGraphGoal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphGoal, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphGoal, _is_default_instance_));
  ExplGraphPath_descriptor_ = file->message_type(10);
  static const int ExplGraphPath_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphPath, nodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphPath, prob_switches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphPath, tensor_switches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphPath, operators_),
  };
  ExplGraphPath_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExplGraphPath_descriptor_,
      ExplGraphPath::default_instance_,
      ExplGraphPath_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExplGraphPath),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphPath, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphPath, _is_default_instance_));
  ExplGraphNode_descriptor_ = file->message_type(11);
  static const int ExplGraphNode_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphNode, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphNode, sorted_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphNode, goal_),
  };
  ExplGraphNode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExplGraphNode_descriptor_,
      ExplGraphNode::default_instance_,
      ExplGraphNode_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExplGraphNode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphNode, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExplGraphNode, _is_default_instance_));
  GoalTerm_descriptor_ = file->message_type(12);
  static const int GoalTerm_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalTerm, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalTerm, args_),
  };
  GoalTerm_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoalTerm_descriptor_,
      GoalTerm::default_instance_,
      GoalTerm_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoalTerm),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalTerm, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalTerm, _is_default_instance_));
  SwIns_descriptor_ = file->message_type(13);
  static const int SwIns_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, inside_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, sw_type_),
  };
  SwIns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SwIns_descriptor_,
      SwIns::default_instance_,
      SwIns_offsets_,
      -1,
      -1,
      -1,
      sizeof(SwIns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwIns, _is_default_instance_));
  Root_descriptor_ = file->message_type(14);
  static const int Root_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, sorted_id_),
  };
  Root_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Root_descriptor_,
      Root::default_instance_,
      Root_offsets_,
      -1,
      -1,
      -1,
      sizeof(Root),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _is_default_instance_));
  RankRoot_descriptor_ = file->message_type(15);
  static const int RankRoot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankRoot, roots_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankRoot, count_),
  };
  RankRoot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankRoot_descriptor_,
      RankRoot::default_instance_,
      RankRoot_offsets_,
      -1,
      -1,
      -1,
      sizeof(RankRoot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankRoot, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankRoot, _is_default_instance_));
  SwType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_expl_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlaceholderData_descriptor_, &PlaceholderData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlaceholderGoal_descriptor_, &PlaceholderGoal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataRecord_descriptor_, &DataRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Placeholder_descriptor_, &Placeholder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Option_descriptor_, &Option::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Flag_descriptor_, &Flag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IndexRange_descriptor_, &IndexRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TensorShape_descriptor_, &TensorShape::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExplGraph_descriptor_, &ExplGraph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExplGraphGoal_descriptor_, &ExplGraphGoal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExplGraphPath_descriptor_, &ExplGraphPath::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExplGraphNode_descriptor_, &ExplGraphNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoalTerm_descriptor_, &GoalTerm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SwIns_descriptor_, &SwIns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Root_descriptor_, &Root::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankRoot_descriptor_, &RankRoot::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_expl_2eproto() {
  delete PlaceholderData::default_instance_;
  delete PlaceholderData_reflection_;
  delete PlaceholderGoal::default_instance_;
  delete PlaceholderGoal_reflection_;
  delete DataRecord::default_instance_;
  delete DataRecord_reflection_;
  delete Placeholder::default_instance_;
  delete Placeholder_reflection_;
  delete Option::default_instance_;
  delete Option_reflection_;
  delete Flag::default_instance_;
  delete Flag_reflection_;
  delete IndexRange::default_instance_;
  delete IndexRange_reflection_;
  delete TensorShape::default_instance_;
  delete TensorShape_reflection_;
  delete ExplGraph::default_instance_;
  delete ExplGraph_reflection_;
  delete ExplGraphGoal::default_instance_;
  delete ExplGraphGoal_reflection_;
  delete ExplGraphPath::default_instance_;
  delete ExplGraphPath_reflection_;
  delete ExplGraphNode::default_instance_;
  delete ExplGraphNode_reflection_;
  delete GoalTerm::default_instance_;
  delete GoalTerm_reflection_;
  delete SwIns::default_instance_;
  delete SwIns_reflection_;
  delete Root::default_instance_;
  delete Root_reflection_;
  delete RankRoot::default_instance_;
  delete RankRoot_reflection_;
}

void protobuf_AddDesc_expl_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_expl_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nexpl.proto\022\005prism\"8\n\017PlaceholderData\022%"
    "\n\005goals\030\001 \003(\0132\026.prism.PlaceholderGoal\"k\n"
    "\017PlaceholderGoal\022\n\n\002id\030\001 \001(\005\022(\n\014placehol"
    "ders\030\002 \003(\0132\022.prism.Placeholder\022\"\n\007record"
    "s\030\003 \003(\0132\021.prism.DataRecord\"\033\n\nDataRecord"
    "\022\r\n\005items\030\002 \003(\t\"\033\n\013Placeholder\022\014\n\004name\030\001"
    " \001(\t\"v\n\006Option\022\032\n\005flags\030\001 \003(\0132\013.prism.Fl"
    "ag\022&\n\013index_range\030\002 \003(\0132\021.prism.IndexRan"
    "ge\022(\n\014tensor_shape\030\003 \003(\0132\022.prism.TensorS"
    "hape\"\"\n\004Flag\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    "\"*\n\nIndexRange\022\r\n\005index\030\001 \001(\t\022\r\n\005range\030\002"
    " \001(\005\"\?\n\013TensorShape\022\023\n\013tensor_name\030\001 \001(\t"
    "\022\r\n\005shape\030\002 \003(\005\022\014\n\004type\030\003 \001(\t\"T\n\tExplGra"
    "ph\022#\n\005goals\030\001 \003(\0132\024.prism.ExplGraphGoal\022"
    "\"\n\troot_list\030\002 \003(\0132\017.prism.RankRoot\"X\n\rE"
    "xplGraphGoal\022\"\n\004node\030\001 \001(\0132\024.prism.ExplG"
    "raphNode\022#\n\005paths\030\002 \003(\0132\024.prism.ExplGrap"
    "hPath\"\241\001\n\rExplGraphPath\022#\n\005nodes\030\001 \003(\0132\024"
    ".prism.ExplGraphNode\022#\n\rprob_switches\030\002 "
    "\003(\0132\014.prism.SwIns\022%\n\017tensor_switches\030\003 \003"
    "(\0132\014.prism.SwIns\022\037\n\toperators\030\004 \003(\0132\014.pr"
    "ism.SwIns\"M\n\rExplGraphNode\022\n\n\002id\030\001 \001(\005\022\021"
    "\n\tsorted_id\030\002 \001(\005\022\035\n\004goal\030\003 \001(\0132\017.prism."
    "GoalTerm\"&\n\010GoalTerm\022\014\n\004name\030\001 \001(\t\022\014\n\004ar"
    "gs\030\002 \003(\t\"a\n\005SwIns\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 "
    "\001(\t\022\016\n\006values\030\003 \003(\t\022\016\n\006inside\030\004 \001(\002\022\036\n\007s"
    "w_type\030\005 \001(\0162\r.prism.SwType\"%\n\004Root\022\n\n\002i"
    "d\030\001 \001(\005\022\021\n\tsorted_id\030\002 \001(\005\"5\n\010RankRoot\022\032"
    "\n\005roots\030\001 \003(\0132\013.prism.Root\022\r\n\005count\030\002 \001("
    "\005*5\n\006SwType\022\021\n\rProbabilistic\020\000\022\n\n\006Tensor"
    "\020\001\022\014\n\010Operator\020\002b\006proto3", 1224);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "expl.proto", &protobuf_RegisterTypes);
  PlaceholderData::default_instance_ = new PlaceholderData();
  PlaceholderGoal::default_instance_ = new PlaceholderGoal();
  DataRecord::default_instance_ = new DataRecord();
  Placeholder::default_instance_ = new Placeholder();
  Option::default_instance_ = new Option();
  Flag::default_instance_ = new Flag();
  IndexRange::default_instance_ = new IndexRange();
  TensorShape::default_instance_ = new TensorShape();
  ExplGraph::default_instance_ = new ExplGraph();
  ExplGraphGoal::default_instance_ = new ExplGraphGoal();
  ExplGraphPath::default_instance_ = new ExplGraphPath();
  ExplGraphNode::default_instance_ = new ExplGraphNode();
  GoalTerm::default_instance_ = new GoalTerm();
  SwIns::default_instance_ = new SwIns();
  Root::default_instance_ = new Root();
  RankRoot::default_instance_ = new RankRoot();
  PlaceholderData::default_instance_->InitAsDefaultInstance();
  PlaceholderGoal::default_instance_->InitAsDefaultInstance();
  DataRecord::default_instance_->InitAsDefaultInstance();
  Placeholder::default_instance_->InitAsDefaultInstance();
  Option::default_instance_->InitAsDefaultInstance();
  Flag::default_instance_->InitAsDefaultInstance();
  IndexRange::default_instance_->InitAsDefaultInstance();
  TensorShape::default_instance_->InitAsDefaultInstance();
  ExplGraph::default_instance_->InitAsDefaultInstance();
  ExplGraphGoal::default_instance_->InitAsDefaultInstance();
  ExplGraphPath::default_instance_->InitAsDefaultInstance();
  ExplGraphNode::default_instance_->InitAsDefaultInstance();
  GoalTerm::default_instance_->InitAsDefaultInstance();
  SwIns::default_instance_->InitAsDefaultInstance();
  Root::default_instance_->InitAsDefaultInstance();
  RankRoot::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_expl_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_expl_2eproto {
  StaticDescriptorInitializer_expl_2eproto() {
    protobuf_AddDesc_expl_2eproto();
  }
} static_descriptor_initializer_expl_2eproto_;
const ::google::protobuf::EnumDescriptor* SwType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwType_descriptor_;
}
bool SwType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaceholderData::kGoalsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaceholderData::PlaceholderData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PlaceholderData)
}

void PlaceholderData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlaceholderData::PlaceholderData(const PlaceholderData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.PlaceholderData)
}

void PlaceholderData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PlaceholderData::~PlaceholderData() {
  // @@protoc_insertion_point(destructor:prism.PlaceholderData)
  SharedDtor();
}

void PlaceholderData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlaceholderData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaceholderData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlaceholderData_descriptor_;
}

const PlaceholderData& PlaceholderData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

PlaceholderData* PlaceholderData::default_instance_ = NULL;

PlaceholderData* PlaceholderData::New(::google::protobuf::Arena* arena) const {
  PlaceholderData* n = new PlaceholderData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlaceholderData::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.PlaceholderData)
  goals_.Clear();
}

bool PlaceholderData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PlaceholderData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prism.PlaceholderGoal goals = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_goals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_goals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_goals;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PlaceholderData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PlaceholderData)
  return false;
#undef DO_
}

void PlaceholderData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.PlaceholderData)
  // repeated .prism.PlaceholderGoal goals = 1;
  for (unsigned int i = 0, n = this->goals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goals(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.PlaceholderData)
}

::google::protobuf::uint8* PlaceholderData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.PlaceholderData)
  // repeated .prism.PlaceholderGoal goals = 1;
  for (unsigned int i = 0, n = this->goals_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->goals(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.PlaceholderData)
  return target;
}

int PlaceholderData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.PlaceholderData)
  int total_size = 0;

  // repeated .prism.PlaceholderGoal goals = 1;
  total_size += 1 * this->goals_size();
  for (int i = 0; i < this->goals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goals(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaceholderData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.PlaceholderData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlaceholderData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaceholderData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PlaceholderData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PlaceholderData)
    MergeFrom(*source);
  }
}

void PlaceholderData::MergeFrom(const PlaceholderData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.PlaceholderData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  goals_.MergeFrom(from.goals_);
}

void PlaceholderData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.PlaceholderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceholderData::CopyFrom(const PlaceholderData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.PlaceholderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceholderData::IsInitialized() const {

  return true;
}

void PlaceholderData::Swap(PlaceholderData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaceholderData::InternalSwap(PlaceholderData* other) {
  goals_.UnsafeArenaSwap(&other->goals_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaceholderData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlaceholderData_descriptor_;
  metadata.reflection = PlaceholderData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlaceholderData

// repeated .prism.PlaceholderGoal goals = 1;
int PlaceholderData::goals_size() const {
  return goals_.size();
}
void PlaceholderData::clear_goals() {
  goals_.Clear();
}
const ::prism::PlaceholderGoal& PlaceholderData::goals(int index) const {
  // @@protoc_insertion_point(field_get:prism.PlaceholderData.goals)
  return goals_.Get(index);
}
::prism::PlaceholderGoal* PlaceholderData::mutable_goals(int index) {
  // @@protoc_insertion_point(field_mutable:prism.PlaceholderData.goals)
  return goals_.Mutable(index);
}
::prism::PlaceholderGoal* PlaceholderData::add_goals() {
  // @@protoc_insertion_point(field_add:prism.PlaceholderData.goals)
  return goals_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::PlaceholderGoal >*
PlaceholderData::mutable_goals() {
  // @@protoc_insertion_point(field_mutable_list:prism.PlaceholderData.goals)
  return &goals_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::PlaceholderGoal >&
PlaceholderData::goals() const {
  // @@protoc_insertion_point(field_list:prism.PlaceholderData.goals)
  return goals_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaceholderGoal::kIdFieldNumber;
const int PlaceholderGoal::kPlaceholdersFieldNumber;
const int PlaceholderGoal::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaceholderGoal::PlaceholderGoal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PlaceholderGoal)
}

void PlaceholderGoal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlaceholderGoal::PlaceholderGoal(const PlaceholderGoal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.PlaceholderGoal)
}

void PlaceholderGoal::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
}

PlaceholderGoal::~PlaceholderGoal() {
  // @@protoc_insertion_point(destructor:prism.PlaceholderGoal)
  SharedDtor();
}

void PlaceholderGoal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlaceholderGoal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaceholderGoal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlaceholderGoal_descriptor_;
}

const PlaceholderGoal& PlaceholderGoal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

PlaceholderGoal* PlaceholderGoal::default_instance_ = NULL;

PlaceholderGoal* PlaceholderGoal::New(::google::protobuf::Arena* arena) const {
  PlaceholderGoal* n = new PlaceholderGoal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlaceholderGoal::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.PlaceholderGoal)
  id_ = 0;
  placeholders_.Clear();
  records_.Clear();
}

bool PlaceholderGoal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PlaceholderGoal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_placeholders;
        break;
      }

      // repeated .prism.Placeholder placeholders = 2;
      case 2: {
        if (tag == 18) {
         parse_placeholders:
          DO_(input->IncrementRecursionDepth());
         parse_loop_placeholders:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_placeholders()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_placeholders;
        if (input->ExpectTag(26)) goto parse_loop_records;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.DataRecord records = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_records;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PlaceholderGoal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PlaceholderGoal)
  return false;
#undef DO_
}

void PlaceholderGoal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.PlaceholderGoal)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .prism.Placeholder placeholders = 2;
  for (unsigned int i = 0, n = this->placeholders_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->placeholders(i), output);
  }

  // repeated .prism.DataRecord records = 3;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->records(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.PlaceholderGoal)
}

::google::protobuf::uint8* PlaceholderGoal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.PlaceholderGoal)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .prism.Placeholder placeholders = 2;
  for (unsigned int i = 0, n = this->placeholders_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->placeholders(i), false, target);
  }

  // repeated .prism.DataRecord records = 3;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->records(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.PlaceholderGoal)
  return target;
}

int PlaceholderGoal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.PlaceholderGoal)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // repeated .prism.Placeholder placeholders = 2;
  total_size += 1 * this->placeholders_size();
  for (int i = 0; i < this->placeholders_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->placeholders(i));
  }

  // repeated .prism.DataRecord records = 3;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaceholderGoal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.PlaceholderGoal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlaceholderGoal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaceholderGoal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PlaceholderGoal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PlaceholderGoal)
    MergeFrom(*source);
  }
}

void PlaceholderGoal::MergeFrom(const PlaceholderGoal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.PlaceholderGoal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  placeholders_.MergeFrom(from.placeholders_);
  records_.MergeFrom(from.records_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PlaceholderGoal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.PlaceholderGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceholderGoal::CopyFrom(const PlaceholderGoal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.PlaceholderGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceholderGoal::IsInitialized() const {

  return true;
}

void PlaceholderGoal::Swap(PlaceholderGoal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaceholderGoal::InternalSwap(PlaceholderGoal* other) {
  std::swap(id_, other->id_);
  placeholders_.UnsafeArenaSwap(&other->placeholders_);
  records_.UnsafeArenaSwap(&other->records_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaceholderGoal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlaceholderGoal_descriptor_;
  metadata.reflection = PlaceholderGoal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlaceholderGoal

// optional int32 id = 1;
void PlaceholderGoal::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 PlaceholderGoal::id() const {
  // @@protoc_insertion_point(field_get:prism.PlaceholderGoal.id)
  return id_;
}
 void PlaceholderGoal::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.PlaceholderGoal.id)
}

// repeated .prism.Placeholder placeholders = 2;
int PlaceholderGoal::placeholders_size() const {
  return placeholders_.size();
}
void PlaceholderGoal::clear_placeholders() {
  placeholders_.Clear();
}
const ::prism::Placeholder& PlaceholderGoal::placeholders(int index) const {
  // @@protoc_insertion_point(field_get:prism.PlaceholderGoal.placeholders)
  return placeholders_.Get(index);
}
::prism::Placeholder* PlaceholderGoal::mutable_placeholders(int index) {
  // @@protoc_insertion_point(field_mutable:prism.PlaceholderGoal.placeholders)
  return placeholders_.Mutable(index);
}
::prism::Placeholder* PlaceholderGoal::add_placeholders() {
  // @@protoc_insertion_point(field_add:prism.PlaceholderGoal.placeholders)
  return placeholders_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::Placeholder >*
PlaceholderGoal::mutable_placeholders() {
  // @@protoc_insertion_point(field_mutable_list:prism.PlaceholderGoal.placeholders)
  return &placeholders_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::Placeholder >&
PlaceholderGoal::placeholders() const {
  // @@protoc_insertion_point(field_list:prism.PlaceholderGoal.placeholders)
  return placeholders_;
}

// repeated .prism.DataRecord records = 3;
int PlaceholderGoal::records_size() const {
  return records_.size();
}
void PlaceholderGoal::clear_records() {
  records_.Clear();
}
const ::prism::DataRecord& PlaceholderGoal::records(int index) const {
  // @@protoc_insertion_point(field_get:prism.PlaceholderGoal.records)
  return records_.Get(index);
}
::prism::DataRecord* PlaceholderGoal::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:prism.PlaceholderGoal.records)
  return records_.Mutable(index);
}
::prism::DataRecord* PlaceholderGoal::add_records() {
  // @@protoc_insertion_point(field_add:prism.PlaceholderGoal.records)
  return records_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::DataRecord >*
PlaceholderGoal::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:prism.PlaceholderGoal.records)
  return &records_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::DataRecord >&
PlaceholderGoal::records() const {
  // @@protoc_insertion_point(field_list:prism.PlaceholderGoal.records)
  return records_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRecord::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRecord::DataRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.DataRecord)
}

void DataRecord::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DataRecord::DataRecord(const DataRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.DataRecord)
}

void DataRecord::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

DataRecord::~DataRecord() {
  // @@protoc_insertion_point(destructor:prism.DataRecord)
  SharedDtor();
}

void DataRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataRecord_descriptor_;
}

const DataRecord& DataRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

DataRecord* DataRecord::default_instance_ = NULL;

DataRecord* DataRecord::New(::google::protobuf::Arena* arena) const {
  DataRecord* n = new DataRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.DataRecord)
  items_.Clear();
}

bool DataRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.DataRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string items = 2;
      case 2: {
        if (tag == 18) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_items()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->items(this->items_size() - 1).data(),
            this->items(this->items_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.DataRecord.items"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.DataRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.DataRecord)
  return false;
#undef DO_
}

void DataRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.DataRecord)
  // repeated string items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->items(i).data(), this->items(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.DataRecord.items");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.DataRecord)
}

::google::protobuf::uint8* DataRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.DataRecord)
  // repeated string items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->items(i).data(), this->items(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.DataRecord.items");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.DataRecord)
  return target;
}

int DataRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.DataRecord)
  int total_size = 0;

  // repeated string items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.DataRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DataRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.DataRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.DataRecord)
    MergeFrom(*source);
  }
}

void DataRecord::MergeFrom(const DataRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.DataRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  items_.MergeFrom(from.items_);
}

void DataRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.DataRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRecord::CopyFrom(const DataRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.DataRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRecord::IsInitialized() const {

  return true;
}

void DataRecord::Swap(DataRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRecord::InternalSwap(DataRecord* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataRecord_descriptor_;
  metadata.reflection = DataRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataRecord

// repeated string items = 2;
int DataRecord::items_size() const {
  return items_.size();
}
void DataRecord::clear_items() {
  items_.Clear();
}
 const ::std::string& DataRecord::items(int index) const {
  // @@protoc_insertion_point(field_get:prism.DataRecord.items)
  return items_.Get(index);
}
 ::std::string* DataRecord::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:prism.DataRecord.items)
  return items_.Mutable(index);
}
 void DataRecord::set_items(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:prism.DataRecord.items)
  items_.Mutable(index)->assign(value);
}
 void DataRecord::set_items(int index, const char* value) {
  items_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:prism.DataRecord.items)
}
 void DataRecord::set_items(int index, const char* value, size_t size) {
  items_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:prism.DataRecord.items)
}
 ::std::string* DataRecord::add_items() {
  // @@protoc_insertion_point(field_add_mutable:prism.DataRecord.items)
  return items_.Add();
}
 void DataRecord::add_items(const ::std::string& value) {
  items_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:prism.DataRecord.items)
}
 void DataRecord::add_items(const char* value) {
  items_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:prism.DataRecord.items)
}
 void DataRecord::add_items(const char* value, size_t size) {
  items_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:prism.DataRecord.items)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
DataRecord::items() const {
  // @@protoc_insertion_point(field_list:prism.DataRecord.items)
  return items_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
DataRecord::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:prism.DataRecord.items)
  return &items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Placeholder::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Placeholder::Placeholder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.Placeholder)
}

void Placeholder::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Placeholder::Placeholder(const Placeholder& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.Placeholder)
}

void Placeholder::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Placeholder::~Placeholder() {
  // @@protoc_insertion_point(destructor:prism.Placeholder)
  SharedDtor();
}

void Placeholder::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Placeholder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Placeholder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Placeholder_descriptor_;
}

const Placeholder& Placeholder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

Placeholder* Placeholder::default_instance_ = NULL;

Placeholder* Placeholder::New(::google::protobuf::Arena* arena) const {
  Placeholder* n = new Placeholder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Placeholder::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.Placeholder)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Placeholder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.Placeholder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.Placeholder.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.Placeholder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.Placeholder)
  return false;
#undef DO_
}

void Placeholder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.Placeholder)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.Placeholder.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.Placeholder)
}

::google::protobuf::uint8* Placeholder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.Placeholder)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.Placeholder.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.Placeholder)
  return target;
}

int Placeholder::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.Placeholder)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Placeholder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.Placeholder)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Placeholder* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Placeholder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.Placeholder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.Placeholder)
    MergeFrom(*source);
  }
}

void Placeholder::MergeFrom(const Placeholder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.Placeholder)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Placeholder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.Placeholder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Placeholder::CopyFrom(const Placeholder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.Placeholder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Placeholder::IsInitialized() const {

  return true;
}

void Placeholder::Swap(Placeholder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Placeholder::InternalSwap(Placeholder* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Placeholder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Placeholder_descriptor_;
  metadata.reflection = Placeholder_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Placeholder

// optional string name = 1;
void Placeholder::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Placeholder::name() const {
  // @@protoc_insertion_point(field_get:prism.Placeholder.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Placeholder::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.Placeholder.name)
}
 void Placeholder::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.Placeholder.name)
}
 void Placeholder::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.Placeholder.name)
}
 ::std::string* Placeholder::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:prism.Placeholder.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Placeholder::release_name() {
  // @@protoc_insertion_point(field_release:prism.Placeholder.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Placeholder::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:prism.Placeholder.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Option::kFlagsFieldNumber;
const int Option::kIndexRangeFieldNumber;
const int Option::kTensorShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Option::Option()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.Option)
}

void Option::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Option::Option(const Option& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.Option)
}

void Option::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Option::~Option() {
  // @@protoc_insertion_point(destructor:prism.Option)
  SharedDtor();
}

void Option::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Option::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Option::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Option_descriptor_;
}

const Option& Option::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

Option* Option::default_instance_ = NULL;

Option* Option::New(::google::protobuf::Arena* arena) const {
  Option* n = new Option;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Option::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.Option)
  flags_.Clear();
  index_range_.Clear();
  tensor_shape_.Clear();
}

bool Option::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.Option)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prism.Flag flags = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_flags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_flags()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_flags;
        if (input->ExpectTag(18)) goto parse_loop_index_range;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.IndexRange index_range = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_index_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_index_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_index_range;
        if (input->ExpectTag(26)) goto parse_loop_tensor_shape;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.TensorShape tensor_shape = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tensor_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tensor_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_tensor_shape;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.Option)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.Option)
  return false;
#undef DO_
}

void Option::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.Option)
  // repeated .prism.Flag flags = 1;
  for (unsigned int i = 0, n = this->flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->flags(i), output);
  }

  // repeated .prism.IndexRange index_range = 2;
  for (unsigned int i = 0, n = this->index_range_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->index_range(i), output);
  }

  // repeated .prism.TensorShape tensor_shape = 3;
  for (unsigned int i = 0, n = this->tensor_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tensor_shape(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.Option)
}

::google::protobuf::uint8* Option::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.Option)
  // repeated .prism.Flag flags = 1;
  for (unsigned int i = 0, n = this->flags_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->flags(i), false, target);
  }

  // repeated .prism.IndexRange index_range = 2;
  for (unsigned int i = 0, n = this->index_range_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->index_range(i), false, target);
  }

  // repeated .prism.TensorShape tensor_shape = 3;
  for (unsigned int i = 0, n = this->tensor_shape_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tensor_shape(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.Option)
  return target;
}

int Option::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.Option)
  int total_size = 0;

  // repeated .prism.Flag flags = 1;
  total_size += 1 * this->flags_size();
  for (int i = 0; i < this->flags_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->flags(i));
  }

  // repeated .prism.IndexRange index_range = 2;
  total_size += 1 * this->index_range_size();
  for (int i = 0; i < this->index_range_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->index_range(i));
  }

  // repeated .prism.TensorShape tensor_shape = 3;
  total_size += 1 * this->tensor_shape_size();
  for (int i = 0; i < this->tensor_shape_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tensor_shape(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Option::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.Option)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Option* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Option>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.Option)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.Option)
    MergeFrom(*source);
  }
}

void Option::MergeFrom(const Option& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.Option)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  flags_.MergeFrom(from.flags_);
  index_range_.MergeFrom(from.index_range_);
  tensor_shape_.MergeFrom(from.tensor_shape_);
}

void Option::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Option::CopyFrom(const Option& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Option::IsInitialized() const {

  return true;
}

void Option::Swap(Option* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Option::InternalSwap(Option* other) {
  flags_.UnsafeArenaSwap(&other->flags_);
  index_range_.UnsafeArenaSwap(&other->index_range_);
  tensor_shape_.UnsafeArenaSwap(&other->tensor_shape_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Option::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Option_descriptor_;
  metadata.reflection = Option_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Option

// repeated .prism.Flag flags = 1;
int Option::flags_size() const {
  return flags_.size();
}
void Option::clear_flags() {
  flags_.Clear();
}
const ::prism::Flag& Option::flags(int index) const {
  // @@protoc_insertion_point(field_get:prism.Option.flags)
  return flags_.Get(index);
}
::prism::Flag* Option::mutable_flags(int index) {
  // @@protoc_insertion_point(field_mutable:prism.Option.flags)
  return flags_.Mutable(index);
}
::prism::Flag* Option::add_flags() {
  // @@protoc_insertion_point(field_add:prism.Option.flags)
  return flags_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::Flag >*
Option::mutable_flags() {
  // @@protoc_insertion_point(field_mutable_list:prism.Option.flags)
  return &flags_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::Flag >&
Option::flags() const {
  // @@protoc_insertion_point(field_list:prism.Option.flags)
  return flags_;
}

// repeated .prism.IndexRange index_range = 2;
int Option::index_range_size() const {
  return index_range_.size();
}
void Option::clear_index_range() {
  index_range_.Clear();
}
const ::prism::IndexRange& Option::index_range(int index) const {
  // @@protoc_insertion_point(field_get:prism.Option.index_range)
  return index_range_.Get(index);
}
::prism::IndexRange* Option::mutable_index_range(int index) {
  // @@protoc_insertion_point(field_mutable:prism.Option.index_range)
  return index_range_.Mutable(index);
}
::prism::IndexRange* Option::add_index_range() {
  // @@protoc_insertion_point(field_add:prism.Option.index_range)
  return index_range_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::IndexRange >*
Option::mutable_index_range() {
  // @@protoc_insertion_point(field_mutable_list:prism.Option.index_range)
  return &index_range_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::IndexRange >&
Option::index_range() const {
  // @@protoc_insertion_point(field_list:prism.Option.index_range)
  return index_range_;
}

// repeated .prism.TensorShape tensor_shape = 3;
int Option::tensor_shape_size() const {
  return tensor_shape_.size();
}
void Option::clear_tensor_shape() {
  tensor_shape_.Clear();
}
const ::prism::TensorShape& Option::tensor_shape(int index) const {
  // @@protoc_insertion_point(field_get:prism.Option.tensor_shape)
  return tensor_shape_.Get(index);
}
::prism::TensorShape* Option::mutable_tensor_shape(int index) {
  // @@protoc_insertion_point(field_mutable:prism.Option.tensor_shape)
  return tensor_shape_.Mutable(index);
}
::prism::TensorShape* Option::add_tensor_shape() {
  // @@protoc_insertion_point(field_add:prism.Option.tensor_shape)
  return tensor_shape_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::TensorShape >*
Option::mutable_tensor_shape() {
  // @@protoc_insertion_point(field_mutable_list:prism.Option.tensor_shape)
  return &tensor_shape_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::TensorShape >&
Option::tensor_shape() const {
  // @@protoc_insertion_point(field_list:prism.Option.tensor_shape)
  return tensor_shape_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Flag::kKeyFieldNumber;
const int Flag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Flag::Flag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.Flag)
}

void Flag::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Flag::Flag(const Flag& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.Flag)
}

void Flag::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Flag::~Flag() {
  // @@protoc_insertion_point(destructor:prism.Flag)
  SharedDtor();
}

void Flag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Flag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Flag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Flag_descriptor_;
}

const Flag& Flag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

Flag* Flag::default_instance_ = NULL;

Flag* Flag::New(::google::protobuf::Arena* arena) const {
  Flag* n = new Flag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Flag::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.Flag)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Flag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.Flag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.Flag.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.Flag.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.Flag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.Flag)
  return false;
#undef DO_
}

void Flag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.Flag)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.Flag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.Flag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.Flag)
}

::google::protobuf::uint8* Flag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.Flag)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.Flag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.Flag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.Flag)
  return target;
}

int Flag::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.Flag)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Flag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.Flag)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Flag* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Flag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.Flag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.Flag)
    MergeFrom(*source);
  }
}

void Flag::MergeFrom(const Flag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.Flag)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Flag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.Flag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Flag::CopyFrom(const Flag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.Flag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Flag::IsInitialized() const {

  return true;
}

void Flag::Swap(Flag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Flag::InternalSwap(Flag* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Flag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Flag_descriptor_;
  metadata.reflection = Flag_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Flag

// optional string key = 1;
void Flag::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Flag::key() const {
  // @@protoc_insertion_point(field_get:prism.Flag.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Flag::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.Flag.key)
}
 void Flag::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.Flag.key)
}
 void Flag::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.Flag.key)
}
 ::std::string* Flag::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:prism.Flag.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Flag::release_key() {
  // @@protoc_insertion_point(field_release:prism.Flag.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Flag::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:prism.Flag.key)
}

// optional string value = 2;
void Flag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Flag::value() const {
  // @@protoc_insertion_point(field_get:prism.Flag.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Flag::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.Flag.value)
}
 void Flag::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.Flag.value)
}
 void Flag::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.Flag.value)
}
 ::std::string* Flag::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:prism.Flag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Flag::release_value() {
  // @@protoc_insertion_point(field_release:prism.Flag.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Flag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:prism.Flag.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexRange::kIndexFieldNumber;
const int IndexRange::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexRange::IndexRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.IndexRange)
}

void IndexRange::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IndexRange::IndexRange(const IndexRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.IndexRange)
}

void IndexRange::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_ = 0;
}

IndexRange::~IndexRange() {
  // @@protoc_insertion_point(destructor:prism.IndexRange)
  SharedDtor();
}

void IndexRange::SharedDtor() {
  index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IndexRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IndexRange_descriptor_;
}

const IndexRange& IndexRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

IndexRange* IndexRange::default_instance_ = NULL;

IndexRange* IndexRange::New(::google::protobuf::Arena* arena) const {
  IndexRange* n = new IndexRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexRange::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.IndexRange)
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_ = 0;
}

bool IndexRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.IndexRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string index = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index().data(), this->index().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.IndexRange.index"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_range;
        break;
      }

      // optional int32 range = 2;
      case 2: {
        if (tag == 16) {
         parse_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.IndexRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.IndexRange)
  return false;
#undef DO_
}

void IndexRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.IndexRange)
  // optional string index = 1;
  if (this->index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index().data(), this->index().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.IndexRange.index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->index(), output);
  }

  // optional int32 range = 2;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->range(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.IndexRange)
}

::google::protobuf::uint8* IndexRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.IndexRange)
  // optional string index = 1;
  if (this->index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index().data(), this->index().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.IndexRange.index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->index(), target);
  }

  // optional int32 range = 2;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->range(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.IndexRange)
  return target;
}

int IndexRange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.IndexRange)
  int total_size = 0;

  // optional string index = 1;
  if (this->index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index());
  }

  // optional int32 range = 2;
  if (this->range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.IndexRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IndexRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.IndexRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.IndexRange)
    MergeFrom(*source);
  }
}

void IndexRange::MergeFrom(const IndexRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.IndexRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.index().size() > 0) {

    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
}

void IndexRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.IndexRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexRange::CopyFrom(const IndexRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.IndexRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexRange::IsInitialized() const {

  return true;
}

void IndexRange::Swap(IndexRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexRange::InternalSwap(IndexRange* other) {
  index_.Swap(&other->index_);
  std::swap(range_, other->range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IndexRange_descriptor_;
  metadata.reflection = IndexRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexRange

// optional string index = 1;
void IndexRange::clear_index() {
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IndexRange::index() const {
  // @@protoc_insertion_point(field_get:prism.IndexRange.index)
  return index_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexRange::set_index(const ::std::string& value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.IndexRange.index)
}
 void IndexRange::set_index(const char* value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.IndexRange.index)
}
 void IndexRange::set_index(const char* value, size_t size) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.IndexRange.index)
}
 ::std::string* IndexRange::mutable_index() {
  
  // @@protoc_insertion_point(field_mutable:prism.IndexRange.index)
  return index_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IndexRange::release_index() {
  // @@protoc_insertion_point(field_release:prism.IndexRange.index)
  
  return index_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexRange::set_allocated_index(::std::string* index) {
  if (index != NULL) {
    
  } else {
    
  }
  index_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index);
  // @@protoc_insertion_point(field_set_allocated:prism.IndexRange.index)
}

// optional int32 range = 2;
void IndexRange::clear_range() {
  range_ = 0;
}
 ::google::protobuf::int32 IndexRange::range() const {
  // @@protoc_insertion_point(field_get:prism.IndexRange.range)
  return range_;
}
 void IndexRange::set_range(::google::protobuf::int32 value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:prism.IndexRange.range)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorShape::kTensorNameFieldNumber;
const int TensorShape::kShapeFieldNumber;
const int TensorShape::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorShape::TensorShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.TensorShape)
}

void TensorShape::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TensorShape::TensorShape(const TensorShape& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.TensorShape)
}

void TensorShape::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tensor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TensorShape::~TensorShape() {
  // @@protoc_insertion_point(destructor:prism.TensorShape)
  SharedDtor();
}

void TensorShape::SharedDtor() {
  tensor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TensorShape::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorShape::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorShape_descriptor_;
}

const TensorShape& TensorShape::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

TensorShape* TensorShape::default_instance_ = NULL;

TensorShape* TensorShape::New(::google::protobuf::Arena* arena) const {
  TensorShape* n = new TensorShape;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorShape::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.TensorShape)
  tensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shape_.Clear();
}

bool TensorShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.TensorShape)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tensor_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tensor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tensor_name().data(), this->tensor_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.TensorShape.tensor_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }

      // repeated int32 shape = 2;
      case 2: {
        if (tag == 18) {
         parse_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shape())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.TensorShape.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.TensorShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.TensorShape)
  return false;
#undef DO_
}

void TensorShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.TensorShape)
  // optional string tensor_name = 1;
  if (this->tensor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_name().data(), this->tensor_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.TensorShape.tensor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tensor_name(), output);
  }

  // repeated int32 shape = 2;
  if (this->shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_shape_cached_byte_size_);
  }
  for (int i = 0; i < this->shape_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->shape(i), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.TensorShape.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.TensorShape)
}

::google::protobuf::uint8* TensorShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.TensorShape)
  // optional string tensor_name = 1;
  if (this->tensor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_name().data(), this->tensor_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.TensorShape.tensor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tensor_name(), target);
  }

  // repeated int32 shape = 2;
  if (this->shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _shape_cached_byte_size_, target);
  }
  for (int i = 0; i < this->shape_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->shape(i), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.TensorShape.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.TensorShape)
  return target;
}

int TensorShape::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.TensorShape)
  int total_size = 0;

  // optional string tensor_name = 1;
  if (this->tensor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tensor_name());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // repeated int32 shape = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->shape_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->shape(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.TensorShape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TensorShape* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.TensorShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.TensorShape)
    MergeFrom(*source);
  }
}

void TensorShape::MergeFrom(const TensorShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.TensorShape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  shape_.MergeFrom(from.shape_);
  if (from.tensor_name().size() > 0) {

    tensor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void TensorShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.TensorShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShape::CopyFrom(const TensorShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.TensorShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShape::IsInitialized() const {

  return true;
}

void TensorShape::Swap(TensorShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorShape::InternalSwap(TensorShape* other) {
  tensor_name_.Swap(&other->tensor_name_);
  shape_.UnsafeArenaSwap(&other->shape_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorShape::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorShape_descriptor_;
  metadata.reflection = TensorShape_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorShape

// optional string tensor_name = 1;
void TensorShape::clear_tensor_name() {
  tensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TensorShape::tensor_name() const {
  // @@protoc_insertion_point(field_get:prism.TensorShape.tensor_name)
  return tensor_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TensorShape::set_tensor_name(const ::std::string& value) {
  
  tensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.TensorShape.tensor_name)
}
 void TensorShape::set_tensor_name(const char* value) {
  
  tensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.TensorShape.tensor_name)
}
 void TensorShape::set_tensor_name(const char* value, size_t size) {
  
  tensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.TensorShape.tensor_name)
}
 ::std::string* TensorShape::mutable_tensor_name() {
  
  // @@protoc_insertion_point(field_mutable:prism.TensorShape.tensor_name)
  return tensor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TensorShape::release_tensor_name() {
  // @@protoc_insertion_point(field_release:prism.TensorShape.tensor_name)
  
  return tensor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TensorShape::set_allocated_tensor_name(::std::string* tensor_name) {
  if (tensor_name != NULL) {
    
  } else {
    
  }
  tensor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tensor_name);
  // @@protoc_insertion_point(field_set_allocated:prism.TensorShape.tensor_name)
}

// repeated int32 shape = 2;
int TensorShape::shape_size() const {
  return shape_.size();
}
void TensorShape::clear_shape() {
  shape_.Clear();
}
 ::google::protobuf::int32 TensorShape::shape(int index) const {
  // @@protoc_insertion_point(field_get:prism.TensorShape.shape)
  return shape_.Get(index);
}
 void TensorShape::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:prism.TensorShape.shape)
}
 void TensorShape::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:prism.TensorShape.shape)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorShape::shape() const {
  // @@protoc_insertion_point(field_list:prism.TensorShape.shape)
  return shape_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorShape::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:prism.TensorShape.shape)
  return &shape_;
}

// optional string type = 3;
void TensorShape::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TensorShape::type() const {
  // @@protoc_insertion_point(field_get:prism.TensorShape.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TensorShape::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.TensorShape.type)
}
 void TensorShape::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.TensorShape.type)
}
 void TensorShape::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.TensorShape.type)
}
 ::std::string* TensorShape::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:prism.TensorShape.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TensorShape::release_type() {
  // @@protoc_insertion_point(field_release:prism.TensorShape.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TensorShape::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:prism.TensorShape.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplGraph::kGoalsFieldNumber;
const int ExplGraph::kRootListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplGraph::ExplGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.ExplGraph)
}

void ExplGraph::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExplGraph::ExplGraph(const ExplGraph& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.ExplGraph)
}

void ExplGraph::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ExplGraph::~ExplGraph() {
  // @@protoc_insertion_point(destructor:prism.ExplGraph)
  SharedDtor();
}

void ExplGraph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExplGraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExplGraph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExplGraph_descriptor_;
}

const ExplGraph& ExplGraph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

ExplGraph* ExplGraph::default_instance_ = NULL;

ExplGraph* ExplGraph::New(::google::protobuf::Arena* arena) const {
  ExplGraph* n = new ExplGraph;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExplGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.ExplGraph)
  goals_.Clear();
  root_list_.Clear();
}

bool ExplGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.ExplGraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prism.ExplGraphGoal goals = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_goals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_goals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_goals;
        if (input->ExpectTag(18)) goto parse_loop_root_list;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.RankRoot root_list = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_root_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_root_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_root_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.ExplGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.ExplGraph)
  return false;
#undef DO_
}

void ExplGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.ExplGraph)
  // repeated .prism.ExplGraphGoal goals = 1;
  for (unsigned int i = 0, n = this->goals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goals(i), output);
  }

  // repeated .prism.RankRoot root_list = 2;
  for (unsigned int i = 0, n = this->root_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->root_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.ExplGraph)
}

::google::protobuf::uint8* ExplGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.ExplGraph)
  // repeated .prism.ExplGraphGoal goals = 1;
  for (unsigned int i = 0, n = this->goals_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->goals(i), false, target);
  }

  // repeated .prism.RankRoot root_list = 2;
  for (unsigned int i = 0, n = this->root_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->root_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.ExplGraph)
  return target;
}

int ExplGraph::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.ExplGraph)
  int total_size = 0;

  // repeated .prism.ExplGraphGoal goals = 1;
  total_size += 1 * this->goals_size();
  for (int i = 0; i < this->goals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goals(i));
  }

  // repeated .prism.RankRoot root_list = 2;
  total_size += 1 * this->root_list_size();
  for (int i = 0; i < this->root_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->root_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExplGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.ExplGraph)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExplGraph* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.ExplGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.ExplGraph)
    MergeFrom(*source);
  }
}

void ExplGraph::MergeFrom(const ExplGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.ExplGraph)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  goals_.MergeFrom(from.goals_);
  root_list_.MergeFrom(from.root_list_);
}

void ExplGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.ExplGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplGraph::CopyFrom(const ExplGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.ExplGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplGraph::IsInitialized() const {

  return true;
}

void ExplGraph::Swap(ExplGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplGraph::InternalSwap(ExplGraph* other) {
  goals_.UnsafeArenaSwap(&other->goals_);
  root_list_.UnsafeArenaSwap(&other->root_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExplGraph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExplGraph_descriptor_;
  metadata.reflection = ExplGraph_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExplGraph

// repeated .prism.ExplGraphGoal goals = 1;
int ExplGraph::goals_size() const {
  return goals_.size();
}
void ExplGraph::clear_goals() {
  goals_.Clear();
}
const ::prism::ExplGraphGoal& ExplGraph::goals(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraph.goals)
  return goals_.Get(index);
}
::prism::ExplGraphGoal* ExplGraph::mutable_goals(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraph.goals)
  return goals_.Mutable(index);
}
::prism::ExplGraphGoal* ExplGraph::add_goals() {
  // @@protoc_insertion_point(field_add:prism.ExplGraph.goals)
  return goals_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal >*
ExplGraph::mutable_goals() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraph.goals)
  return &goals_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphGoal >&
ExplGraph::goals() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraph.goals)
  return goals_;
}

// repeated .prism.RankRoot root_list = 2;
int ExplGraph::root_list_size() const {
  return root_list_.size();
}
void ExplGraph::clear_root_list() {
  root_list_.Clear();
}
const ::prism::RankRoot& ExplGraph::root_list(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraph.root_list)
  return root_list_.Get(index);
}
::prism::RankRoot* ExplGraph::mutable_root_list(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraph.root_list)
  return root_list_.Mutable(index);
}
::prism::RankRoot* ExplGraph::add_root_list() {
  // @@protoc_insertion_point(field_add:prism.ExplGraph.root_list)
  return root_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::RankRoot >*
ExplGraph::mutable_root_list() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraph.root_list)
  return &root_list_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::RankRoot >&
ExplGraph::root_list() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraph.root_list)
  return root_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplGraphGoal::kNodeFieldNumber;
const int ExplGraphGoal::kPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplGraphGoal::ExplGraphGoal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.ExplGraphGoal)
}

void ExplGraphGoal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  node_ = const_cast< ::prism::ExplGraphNode*>(&::prism::ExplGraphNode::default_instance());
}

ExplGraphGoal::ExplGraphGoal(const ExplGraphGoal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.ExplGraphGoal)
}

void ExplGraphGoal::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  node_ = NULL;
}

ExplGraphGoal::~ExplGraphGoal() {
  // @@protoc_insertion_point(destructor:prism.ExplGraphGoal)
  SharedDtor();
}

void ExplGraphGoal::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
  }
}

void ExplGraphGoal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExplGraphGoal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExplGraphGoal_descriptor_;
}

const ExplGraphGoal& ExplGraphGoal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

ExplGraphGoal* ExplGraphGoal::default_instance_ = NULL;

ExplGraphGoal* ExplGraphGoal::New(::google::protobuf::Arena* arena) const {
  ExplGraphGoal* n = new ExplGraphGoal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExplGraphGoal::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.ExplGraphGoal)
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
  paths_.Clear();
}

bool ExplGraphGoal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.ExplGraphGoal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .prism.ExplGraphNode node = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_paths;
        break;
      }

      // repeated .prism.ExplGraphPath paths = 2;
      case 2: {
        if (tag == 18) {
         parse_paths:
          DO_(input->IncrementRecursionDepth());
         parse_loop_paths:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_paths()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_paths;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.ExplGraphGoal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.ExplGraphGoal)
  return false;
#undef DO_
}

void ExplGraphGoal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.ExplGraphGoal)
  // optional .prism.ExplGraphNode node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // repeated .prism.ExplGraphPath paths = 2;
  for (unsigned int i = 0, n = this->paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->paths(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.ExplGraphGoal)
}

::google::protobuf::uint8* ExplGraphGoal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.ExplGraphGoal)
  // optional .prism.ExplGraphNode node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->node_, false, target);
  }

  // repeated .prism.ExplGraphPath paths = 2;
  for (unsigned int i = 0, n = this->paths_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->paths(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.ExplGraphGoal)
  return target;
}

int ExplGraphGoal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.ExplGraphGoal)
  int total_size = 0;

  // optional .prism.ExplGraphNode node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  // repeated .prism.ExplGraphPath paths = 2;
  total_size += 1 * this->paths_size();
  for (int i = 0; i < this->paths_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->paths(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExplGraphGoal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.ExplGraphGoal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExplGraphGoal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplGraphGoal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.ExplGraphGoal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.ExplGraphGoal)
    MergeFrom(*source);
  }
}

void ExplGraphGoal::MergeFrom(const ExplGraphGoal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.ExplGraphGoal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  paths_.MergeFrom(from.paths_);
  if (from.has_node()) {
    mutable_node()->::prism::ExplGraphNode::MergeFrom(from.node());
  }
}

void ExplGraphGoal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.ExplGraphGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplGraphGoal::CopyFrom(const ExplGraphGoal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.ExplGraphGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplGraphGoal::IsInitialized() const {

  return true;
}

void ExplGraphGoal::Swap(ExplGraphGoal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplGraphGoal::InternalSwap(ExplGraphGoal* other) {
  std::swap(node_, other->node_);
  paths_.UnsafeArenaSwap(&other->paths_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExplGraphGoal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExplGraphGoal_descriptor_;
  metadata.reflection = ExplGraphGoal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExplGraphGoal

// optional .prism.ExplGraphNode node = 1;
bool ExplGraphGoal::has_node() const {
  return !_is_default_instance_ && node_ != NULL;
}
void ExplGraphGoal::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
const ::prism::ExplGraphNode& ExplGraphGoal::node() const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphGoal.node)
  return node_ != NULL ? *node_ : *default_instance_->node_;
}
::prism::ExplGraphNode* ExplGraphGoal::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::prism::ExplGraphNode;
  }
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphGoal.node)
  return node_;
}
::prism::ExplGraphNode* ExplGraphGoal::release_node() {
  // @@protoc_insertion_point(field_release:prism.ExplGraphGoal.node)
  
  ::prism::ExplGraphNode* temp = node_;
  node_ = NULL;
  return temp;
}
void ExplGraphGoal::set_allocated_node(::prism::ExplGraphNode* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:prism.ExplGraphGoal.node)
}

// repeated .prism.ExplGraphPath paths = 2;
int ExplGraphGoal::paths_size() const {
  return paths_.size();
}
void ExplGraphGoal::clear_paths() {
  paths_.Clear();
}
const ::prism::ExplGraphPath& ExplGraphGoal::paths(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphGoal.paths)
  return paths_.Get(index);
}
::prism::ExplGraphPath* ExplGraphGoal::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphGoal.paths)
  return paths_.Mutable(index);
}
::prism::ExplGraphPath* ExplGraphGoal::add_paths() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphGoal.paths)
  return paths_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath >*
ExplGraphGoal::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphGoal.paths)
  return &paths_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphPath >&
ExplGraphGoal::paths() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphGoal.paths)
  return paths_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplGraphPath::kNodesFieldNumber;
const int ExplGraphPath::kProbSwitchesFieldNumber;
const int ExplGraphPath::kTensorSwitchesFieldNumber;
const int ExplGraphPath::kOperatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplGraphPath::ExplGraphPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.ExplGraphPath)
}

void ExplGraphPath::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExplGraphPath::ExplGraphPath(const ExplGraphPath& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.ExplGraphPath)
}

void ExplGraphPath::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ExplGraphPath::~ExplGraphPath() {
  // @@protoc_insertion_point(destructor:prism.ExplGraphPath)
  SharedDtor();
}

void ExplGraphPath::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExplGraphPath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExplGraphPath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExplGraphPath_descriptor_;
}

const ExplGraphPath& ExplGraphPath::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

ExplGraphPath* ExplGraphPath::default_instance_ = NULL;

ExplGraphPath* ExplGraphPath::New(::google::protobuf::Arena* arena) const {
  ExplGraphPath* n = new ExplGraphPath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExplGraphPath::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.ExplGraphPath)
  nodes_.Clear();
  prob_switches_.Clear();
  tensor_switches_.Clear();
  operators_.Clear();
}

bool ExplGraphPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.ExplGraphPath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prism.ExplGraphNode nodes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_nodes;
        if (input->ExpectTag(18)) goto parse_loop_prob_switches;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.SwIns prob_switches = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_prob_switches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_prob_switches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_prob_switches;
        if (input->ExpectTag(26)) goto parse_loop_tensor_switches;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.SwIns tensor_switches = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tensor_switches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tensor_switches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_tensor_switches;
        if (input->ExpectTag(34)) goto parse_loop_operators;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .prism.SwIns operators = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_operators:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operators()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_operators;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.ExplGraphPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.ExplGraphPath)
  return false;
#undef DO_
}

void ExplGraphPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.ExplGraphPath)
  // repeated .prism.ExplGraphNode nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(i), output);
  }

  // repeated .prism.SwIns prob_switches = 2;
  for (unsigned int i = 0, n = this->prob_switches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prob_switches(i), output);
  }

  // repeated .prism.SwIns tensor_switches = 3;
  for (unsigned int i = 0, n = this->tensor_switches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tensor_switches(i), output);
  }

  // repeated .prism.SwIns operators = 4;
  for (unsigned int i = 0, n = this->operators_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->operators(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.ExplGraphPath)
}

::google::protobuf::uint8* ExplGraphPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.ExplGraphPath)
  // repeated .prism.ExplGraphNode nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes(i), false, target);
  }

  // repeated .prism.SwIns prob_switches = 2;
  for (unsigned int i = 0, n = this->prob_switches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->prob_switches(i), false, target);
  }

  // repeated .prism.SwIns tensor_switches = 3;
  for (unsigned int i = 0, n = this->tensor_switches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tensor_switches(i), false, target);
  }

  // repeated .prism.SwIns operators = 4;
  for (unsigned int i = 0, n = this->operators_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->operators(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.ExplGraphPath)
  return target;
}

int ExplGraphPath::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.ExplGraphPath)
  int total_size = 0;

  // repeated .prism.ExplGraphNode nodes = 1;
  total_size += 1 * this->nodes_size();
  for (int i = 0; i < this->nodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodes(i));
  }

  // repeated .prism.SwIns prob_switches = 2;
  total_size += 1 * this->prob_switches_size();
  for (int i = 0; i < this->prob_switches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prob_switches(i));
  }

  // repeated .prism.SwIns tensor_switches = 3;
  total_size += 1 * this->tensor_switches_size();
  for (int i = 0; i < this->tensor_switches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tensor_switches(i));
  }

  // repeated .prism.SwIns operators = 4;
  total_size += 1 * this->operators_size();
  for (int i = 0; i < this->operators_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->operators(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExplGraphPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.ExplGraphPath)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExplGraphPath* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplGraphPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.ExplGraphPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.ExplGraphPath)
    MergeFrom(*source);
  }
}

void ExplGraphPath::MergeFrom(const ExplGraphPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.ExplGraphPath)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  nodes_.MergeFrom(from.nodes_);
  prob_switches_.MergeFrom(from.prob_switches_);
  tensor_switches_.MergeFrom(from.tensor_switches_);
  operators_.MergeFrom(from.operators_);
}

void ExplGraphPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.ExplGraphPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplGraphPath::CopyFrom(const ExplGraphPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.ExplGraphPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplGraphPath::IsInitialized() const {

  return true;
}

void ExplGraphPath::Swap(ExplGraphPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplGraphPath::InternalSwap(ExplGraphPath* other) {
  nodes_.UnsafeArenaSwap(&other->nodes_);
  prob_switches_.UnsafeArenaSwap(&other->prob_switches_);
  tensor_switches_.UnsafeArenaSwap(&other->tensor_switches_);
  operators_.UnsafeArenaSwap(&other->operators_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExplGraphPath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExplGraphPath_descriptor_;
  metadata.reflection = ExplGraphPath_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExplGraphPath

// repeated .prism.ExplGraphNode nodes = 1;
int ExplGraphPath::nodes_size() const {
  return nodes_.size();
}
void ExplGraphPath::clear_nodes() {
  nodes_.Clear();
}
const ::prism::ExplGraphNode& ExplGraphPath::nodes(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphPath.nodes)
  return nodes_.Get(index);
}
::prism::ExplGraphNode* ExplGraphPath::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphPath.nodes)
  return nodes_.Mutable(index);
}
::prism::ExplGraphNode* ExplGraphPath::add_nodes() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphPath.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode >*
ExplGraphPath::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphPath.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::ExplGraphNode >&
ExplGraphPath::nodes() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphPath.nodes)
  return nodes_;
}

// repeated .prism.SwIns prob_switches = 2;
int ExplGraphPath::prob_switches_size() const {
  return prob_switches_.size();
}
void ExplGraphPath::clear_prob_switches() {
  prob_switches_.Clear();
}
const ::prism::SwIns& ExplGraphPath::prob_switches(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphPath.prob_switches)
  return prob_switches_.Get(index);
}
::prism::SwIns* ExplGraphPath::mutable_prob_switches(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphPath.prob_switches)
  return prob_switches_.Mutable(index);
}
::prism::SwIns* ExplGraphPath::add_prob_switches() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphPath.prob_switches)
  return prob_switches_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::SwIns >*
ExplGraphPath::mutable_prob_switches() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphPath.prob_switches)
  return &prob_switches_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::SwIns >&
ExplGraphPath::prob_switches() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphPath.prob_switches)
  return prob_switches_;
}

// repeated .prism.SwIns tensor_switches = 3;
int ExplGraphPath::tensor_switches_size() const {
  return tensor_switches_.size();
}
void ExplGraphPath::clear_tensor_switches() {
  tensor_switches_.Clear();
}
const ::prism::SwIns& ExplGraphPath::tensor_switches(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphPath.tensor_switches)
  return tensor_switches_.Get(index);
}
::prism::SwIns* ExplGraphPath::mutable_tensor_switches(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphPath.tensor_switches)
  return tensor_switches_.Mutable(index);
}
::prism::SwIns* ExplGraphPath::add_tensor_switches() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphPath.tensor_switches)
  return tensor_switches_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::SwIns >*
ExplGraphPath::mutable_tensor_switches() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphPath.tensor_switches)
  return &tensor_switches_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::SwIns >&
ExplGraphPath::tensor_switches() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphPath.tensor_switches)
  return tensor_switches_;
}

// repeated .prism.SwIns operators = 4;
int ExplGraphPath::operators_size() const {
  return operators_.size();
}
void ExplGraphPath::clear_operators() {
  operators_.Clear();
}
const ::prism::SwIns& ExplGraphPath::operators(int index) const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphPath.operators)
  return operators_.Get(index);
}
::prism::SwIns* ExplGraphPath::mutable_operators(int index) {
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphPath.operators)
  return operators_.Mutable(index);
}
::prism::SwIns* ExplGraphPath::add_operators() {
  // @@protoc_insertion_point(field_add:prism.ExplGraphPath.operators)
  return operators_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::SwIns >*
ExplGraphPath::mutable_operators() {
  // @@protoc_insertion_point(field_mutable_list:prism.ExplGraphPath.operators)
  return &operators_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::SwIns >&
ExplGraphPath::operators() const {
  // @@protoc_insertion_point(field_list:prism.ExplGraphPath.operators)
  return operators_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplGraphNode::kIdFieldNumber;
const int ExplGraphNode::kSortedIdFieldNumber;
const int ExplGraphNode::kGoalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplGraphNode::ExplGraphNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.ExplGraphNode)
}

void ExplGraphNode::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  goal_ = const_cast< ::prism::GoalTerm*>(&::prism::GoalTerm::default_instance());
}

ExplGraphNode::ExplGraphNode(const ExplGraphNode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.ExplGraphNode)
}

void ExplGraphNode::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  sorted_id_ = 0;
  goal_ = NULL;
}

ExplGraphNode::~ExplGraphNode() {
  // @@protoc_insertion_point(destructor:prism.ExplGraphNode)
  SharedDtor();
}

void ExplGraphNode::SharedDtor() {
  if (this != default_instance_) {
    delete goal_;
  }
}

void ExplGraphNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExplGraphNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExplGraphNode_descriptor_;
}

const ExplGraphNode& ExplGraphNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

ExplGraphNode* ExplGraphNode::default_instance_ = NULL;

ExplGraphNode* ExplGraphNode::New(::google::protobuf::Arena* arena) const {
  ExplGraphNode* n = new ExplGraphNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExplGraphNode::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.ExplGraphNode)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ExplGraphNode, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExplGraphNode*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, sorted_id_);
  if (GetArenaNoVirtual() == NULL && goal_ != NULL) delete goal_;
  goal_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ExplGraphNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.ExplGraphNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sorted_id;
        break;
      }

      // optional int32 sorted_id = 2;
      case 2: {
        if (tag == 16) {
         parse_sorted_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sorted_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_goal;
        break;
      }

      // optional .prism.GoalTerm goal = 3;
      case 3: {
        if (tag == 26) {
         parse_goal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.ExplGraphNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.ExplGraphNode)
  return false;
#undef DO_
}

void ExplGraphNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.ExplGraphNode)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 sorted_id = 2;
  if (this->sorted_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sorted_id(), output);
  }

  // optional .prism.GoalTerm goal = 3;
  if (this->has_goal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->goal_, output);
  }

  // @@protoc_insertion_point(serialize_end:prism.ExplGraphNode)
}

::google::protobuf::uint8* ExplGraphNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.ExplGraphNode)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 sorted_id = 2;
  if (this->sorted_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sorted_id(), target);
  }

  // optional .prism.GoalTerm goal = 3;
  if (this->has_goal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->goal_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.ExplGraphNode)
  return target;
}

int ExplGraphNode::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.ExplGraphNode)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 sorted_id = 2;
  if (this->sorted_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sorted_id());
  }

  // optional .prism.GoalTerm goal = 3;
  if (this->has_goal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->goal_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExplGraphNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.ExplGraphNode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExplGraphNode* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplGraphNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.ExplGraphNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.ExplGraphNode)
    MergeFrom(*source);
  }
}

void ExplGraphNode::MergeFrom(const ExplGraphNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.ExplGraphNode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sorted_id() != 0) {
    set_sorted_id(from.sorted_id());
  }
  if (from.has_goal()) {
    mutable_goal()->::prism::GoalTerm::MergeFrom(from.goal());
  }
}

void ExplGraphNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.ExplGraphNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplGraphNode::CopyFrom(const ExplGraphNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.ExplGraphNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplGraphNode::IsInitialized() const {

  return true;
}

void ExplGraphNode::Swap(ExplGraphNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplGraphNode::InternalSwap(ExplGraphNode* other) {
  std::swap(id_, other->id_);
  std::swap(sorted_id_, other->sorted_id_);
  std::swap(goal_, other->goal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExplGraphNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExplGraphNode_descriptor_;
  metadata.reflection = ExplGraphNode_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExplGraphNode

// optional int32 id = 1;
void ExplGraphNode::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 ExplGraphNode::id() const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphNode.id)
  return id_;
}
 void ExplGraphNode::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.ExplGraphNode.id)
}

// optional int32 sorted_id = 2;
void ExplGraphNode::clear_sorted_id() {
  sorted_id_ = 0;
}
 ::google::protobuf::int32 ExplGraphNode::sorted_id() const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphNode.sorted_id)
  return sorted_id_;
}
 void ExplGraphNode::set_sorted_id(::google::protobuf::int32 value) {
  
  sorted_id_ = value;
  // @@protoc_insertion_point(field_set:prism.ExplGraphNode.sorted_id)
}

// optional .prism.GoalTerm goal = 3;
bool ExplGraphNode::has_goal() const {
  return !_is_default_instance_ && goal_ != NULL;
}
void ExplGraphNode::clear_goal() {
  if (GetArenaNoVirtual() == NULL && goal_ != NULL) delete goal_;
  goal_ = NULL;
}
const ::prism::GoalTerm& ExplGraphNode::goal() const {
  // @@protoc_insertion_point(field_get:prism.ExplGraphNode.goal)
  return goal_ != NULL ? *goal_ : *default_instance_->goal_;
}
::prism::GoalTerm* ExplGraphNode::mutable_goal() {
  
  if (goal_ == NULL) {
    goal_ = new ::prism::GoalTerm;
  }
  // @@protoc_insertion_point(field_mutable:prism.ExplGraphNode.goal)
  return goal_;
}
::prism::GoalTerm* ExplGraphNode::release_goal() {
  // @@protoc_insertion_point(field_release:prism.ExplGraphNode.goal)
  
  ::prism::GoalTerm* temp = goal_;
  goal_ = NULL;
  return temp;
}
void ExplGraphNode::set_allocated_goal(::prism::GoalTerm* goal) {
  delete goal_;
  goal_ = goal;
  if (goal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:prism.ExplGraphNode.goal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoalTerm::kNameFieldNumber;
const int GoalTerm::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoalTerm::GoalTerm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.GoalTerm)
}

void GoalTerm::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GoalTerm::GoalTerm(const GoalTerm& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.GoalTerm)
}

void GoalTerm::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GoalTerm::~GoalTerm() {
  // @@protoc_insertion_point(destructor:prism.GoalTerm)
  SharedDtor();
}

void GoalTerm::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GoalTerm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoalTerm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoalTerm_descriptor_;
}

const GoalTerm& GoalTerm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

GoalTerm* GoalTerm::default_instance_ = NULL;

GoalTerm* GoalTerm::New(::google::protobuf::Arena* arena) const {
  GoalTerm* n = new GoalTerm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoalTerm::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.GoalTerm)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.Clear();
}

bool GoalTerm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.GoalTerm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.GoalTerm.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_args;
        break;
      }

      // repeated string args = 2;
      case 2: {
        if (tag == 18) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            this->args(this->args_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.GoalTerm.args"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_args;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.GoalTerm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.GoalTerm)
  return false;
#undef DO_
}

void GoalTerm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.GoalTerm)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.GoalTerm.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string args = 2;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.GoalTerm.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->args(i), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.GoalTerm)
}

::google::protobuf::uint8* GoalTerm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.GoalTerm)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.GoalTerm.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string args = 2;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.GoalTerm.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->args(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.GoalTerm)
  return target;
}

int GoalTerm::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.GoalTerm)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated string args = 2;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoalTerm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.GoalTerm)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GoalTerm* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GoalTerm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.GoalTerm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.GoalTerm)
    MergeFrom(*source);
  }
}

void GoalTerm::MergeFrom(const GoalTerm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.GoalTerm)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  args_.MergeFrom(from.args_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GoalTerm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.GoalTerm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoalTerm::CopyFrom(const GoalTerm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.GoalTerm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoalTerm::IsInitialized() const {

  return true;
}

void GoalTerm::Swap(GoalTerm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoalTerm::InternalSwap(GoalTerm* other) {
  name_.Swap(&other->name_);
  args_.UnsafeArenaSwap(&other->args_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoalTerm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoalTerm_descriptor_;
  metadata.reflection = GoalTerm_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoalTerm

// optional string name = 1;
void GoalTerm::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GoalTerm::name() const {
  // @@protoc_insertion_point(field_get:prism.GoalTerm.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoalTerm::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.GoalTerm.name)
}
 void GoalTerm::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.GoalTerm.name)
}
 void GoalTerm::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.GoalTerm.name)
}
 ::std::string* GoalTerm::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:prism.GoalTerm.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GoalTerm::release_name() {
  // @@protoc_insertion_point(field_release:prism.GoalTerm.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GoalTerm::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:prism.GoalTerm.name)
}

// repeated string args = 2;
int GoalTerm::args_size() const {
  return args_.size();
}
void GoalTerm::clear_args() {
  args_.Clear();
}
 const ::std::string& GoalTerm::args(int index) const {
  // @@protoc_insertion_point(field_get:prism.GoalTerm.args)
  return args_.Get(index);
}
 ::std::string* GoalTerm::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:prism.GoalTerm.args)
  return args_.Mutable(index);
}
 void GoalTerm::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:prism.GoalTerm.args)
  args_.Mutable(index)->assign(value);
}
 void GoalTerm::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:prism.GoalTerm.args)
}
 void GoalTerm::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:prism.GoalTerm.args)
}
 ::std::string* GoalTerm::add_args() {
  // @@protoc_insertion_point(field_add_mutable:prism.GoalTerm.args)
  return args_.Add();
}
 void GoalTerm::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:prism.GoalTerm.args)
}
 void GoalTerm::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:prism.GoalTerm.args)
}
 void GoalTerm::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:prism.GoalTerm.args)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GoalTerm::args() const {
  // @@protoc_insertion_point(field_list:prism.GoalTerm.args)
  return args_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GoalTerm::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:prism.GoalTerm.args)
  return &args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwIns::kIdFieldNumber;
const int SwIns::kNameFieldNumber;
const int SwIns::kValuesFieldNumber;
const int SwIns::kInsideFieldNumber;
const int SwIns::kSwTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwIns::SwIns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.SwIns)
}

void SwIns::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SwIns::SwIns(const SwIns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.SwIns)
}

void SwIns::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inside_ = 0;
  sw_type_ = 0;
}

SwIns::~SwIns() {
  // @@protoc_insertion_point(destructor:prism.SwIns)
  SharedDtor();
}

void SwIns::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SwIns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwIns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwIns_descriptor_;
}

const SwIns& SwIns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

SwIns* SwIns::default_instance_ = NULL;

SwIns* SwIns::New(::google::protobuf::Arena* arena) const {
  SwIns* n = new SwIns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwIns::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.SwIns)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SwIns, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SwIns*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, inside_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_type_ = 0;

#undef ZR_HELPER_
#undef ZR_

  values_.Clear();
}

bool SwIns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.SwIns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.SwIns.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_values;
        break;
      }

      // repeated string values = 3;
      case 3: {
        if (tag == 26) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            this->values(this->values_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prism.SwIns.values"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_values;
        if (input->ExpectTag(37)) goto parse_inside;
        break;
      }

      // optional float inside = 4;
      case 4: {
        if (tag == 37) {
         parse_inside:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &inside_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sw_type;
        break;
      }

      // optional .prism.SwType sw_type = 5;
      case 5: {
        if (tag == 40) {
         parse_sw_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sw_type(static_cast< ::prism::SwType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.SwIns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.SwIns)
  return false;
#undef DO_
}

void SwIns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.SwIns)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.SwIns.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), this->values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.SwIns.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->values(i), output);
  }

  // optional float inside = 4;
  if (this->inside() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->inside(), output);
  }

  // optional .prism.SwType sw_type = 5;
  if (this->sw_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->sw_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.SwIns)
}

::google::protobuf::uint8* SwIns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.SwIns)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.SwIns.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), this->values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prism.SwIns.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->values(i), target);
  }

  // optional float inside = 4;
  if (this->inside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->inside(), target);
  }

  // optional .prism.SwType sw_type = 5;
  if (this->sw_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->sw_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.SwIns)
  return target;
}

int SwIns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.SwIns)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional float inside = 4;
  if (this->inside() != 0) {
    total_size += 1 + 4;
  }

  // optional .prism.SwType sw_type = 5;
  if (this->sw_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sw_type());
  }

  // repeated string values = 3;
  total_size += 1 * this->values_size();
  for (int i = 0; i < this->values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwIns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.SwIns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SwIns* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SwIns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.SwIns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.SwIns)
    MergeFrom(*source);
  }
}

void SwIns::MergeFrom(const SwIns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.SwIns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  values_.MergeFrom(from.values_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.inside() != 0) {
    set_inside(from.inside());
  }
  if (from.sw_type() != 0) {
    set_sw_type(from.sw_type());
  }
}

void SwIns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.SwIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwIns::CopyFrom(const SwIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.SwIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwIns::IsInitialized() const {

  return true;
}

void SwIns::Swap(SwIns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwIns::InternalSwap(SwIns* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(inside_, other->inside_);
  std::swap(sw_type_, other->sw_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwIns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwIns_descriptor_;
  metadata.reflection = SwIns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwIns

// optional int32 id = 1;
void SwIns::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 SwIns::id() const {
  // @@protoc_insertion_point(field_get:prism.SwIns.id)
  return id_;
}
 void SwIns::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.SwIns.id)
}

// optional string name = 2;
void SwIns::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SwIns::name() const {
  // @@protoc_insertion_point(field_get:prism.SwIns.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SwIns::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prism.SwIns.name)
}
 void SwIns::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.SwIns.name)
}
 void SwIns::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.SwIns.name)
}
 ::std::string* SwIns::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:prism.SwIns.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SwIns::release_name() {
  // @@protoc_insertion_point(field_release:prism.SwIns.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SwIns::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:prism.SwIns.name)
}

// repeated string values = 3;
int SwIns::values_size() const {
  return values_.size();
}
void SwIns::clear_values() {
  values_.Clear();
}
 const ::std::string& SwIns::values(int index) const {
  // @@protoc_insertion_point(field_get:prism.SwIns.values)
  return values_.Get(index);
}
 ::std::string* SwIns::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:prism.SwIns.values)
  return values_.Mutable(index);
}
 void SwIns::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:prism.SwIns.values)
  values_.Mutable(index)->assign(value);
}
 void SwIns::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:prism.SwIns.values)
}
 void SwIns::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:prism.SwIns.values)
}
 ::std::string* SwIns::add_values() {
  // @@protoc_insertion_point(field_add_mutable:prism.SwIns.values)
  return values_.Add();
}
 void SwIns::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:prism.SwIns.values)
}
 void SwIns::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:prism.SwIns.values)
}
 void SwIns::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:prism.SwIns.values)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SwIns::values() const {
  // @@protoc_insertion_point(field_list:prism.SwIns.values)
  return values_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SwIns::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:prism.SwIns.values)
  return &values_;
}

// optional float inside = 4;
void SwIns::clear_inside() {
  inside_ = 0;
}
 float SwIns::inside() const {
  // @@protoc_insertion_point(field_get:prism.SwIns.inside)
  return inside_;
}
 void SwIns::set_inside(float value) {
  
  inside_ = value;
  // @@protoc_insertion_point(field_set:prism.SwIns.inside)
}

// optional .prism.SwType sw_type = 5;
void SwIns::clear_sw_type() {
  sw_type_ = 0;
}
 ::prism::SwType SwIns::sw_type() const {
  // @@protoc_insertion_point(field_get:prism.SwIns.sw_type)
  return static_cast< ::prism::SwType >(sw_type_);
}
 void SwIns::set_sw_type(::prism::SwType value) {
  
  sw_type_ = value;
  // @@protoc_insertion_point(field_set:prism.SwIns.sw_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Root::kIdFieldNumber;
const int Root::kSortedIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Root::Root()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.Root)
}

void Root::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Root::Root(const Root& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.Root)
}

void Root::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  sorted_id_ = 0;
}

Root::~Root() {
  // @@protoc_insertion_point(destructor:prism.Root)
  SharedDtor();
}

void Root::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Root::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Root::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Root_descriptor_;
}

const Root& Root::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

Root* Root::default_instance_ = NULL;

Root* Root::New(::google::protobuf::Arena* arena) const {
  Root* n = new Root;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.Root)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Root, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Root*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, sorted_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool Root::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.Root)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sorted_id;
        break;
      }

      // optional int32 sorted_id = 2;
      case 2: {
        if (tag == 16) {
         parse_sorted_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sorted_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.Root)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.Root)
  return false;
#undef DO_
}

void Root::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.Root)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 sorted_id = 2;
  if (this->sorted_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sorted_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.Root)
}

::google::protobuf::uint8* Root::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.Root)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 sorted_id = 2;
  if (this->sorted_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sorted_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.Root)
  return target;
}

int Root::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.Root)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 sorted_id = 2;
  if (this->sorted_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sorted_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Root::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.Root)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Root* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Root>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.Root)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.Root)
    MergeFrom(*source);
  }
}

void Root::MergeFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.Root)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sorted_id() != 0) {
    set_sorted_id(from.sorted_id());
  }
}

void Root::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Root::IsInitialized() const {

  return true;
}

void Root::Swap(Root* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Root::InternalSwap(Root* other) {
  std::swap(id_, other->id_);
  std::swap(sorted_id_, other->sorted_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Root_descriptor_;
  metadata.reflection = Root_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Root

// optional int32 id = 1;
void Root::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Root::id() const {
  // @@protoc_insertion_point(field_get:prism.Root.id)
  return id_;
}
 void Root::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prism.Root.id)
}

// optional int32 sorted_id = 2;
void Root::clear_sorted_id() {
  sorted_id_ = 0;
}
 ::google::protobuf::int32 Root::sorted_id() const {
  // @@protoc_insertion_point(field_get:prism.Root.sorted_id)
  return sorted_id_;
}
 void Root::set_sorted_id(::google::protobuf::int32 value) {
  
  sorted_id_ = value;
  // @@protoc_insertion_point(field_set:prism.Root.sorted_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankRoot::kRootsFieldNumber;
const int RankRoot::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankRoot::RankRoot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.RankRoot)
}

void RankRoot::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RankRoot::RankRoot(const RankRoot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:prism.RankRoot)
}

void RankRoot::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  count_ = 0;
}

RankRoot::~RankRoot() {
  // @@protoc_insertion_point(destructor:prism.RankRoot)
  SharedDtor();
}

void RankRoot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankRoot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankRoot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankRoot_descriptor_;
}

const RankRoot& RankRoot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_expl_2eproto();
  return *default_instance_;
}

RankRoot* RankRoot::default_instance_ = NULL;

RankRoot* RankRoot::New(::google::protobuf::Arena* arena) const {
  RankRoot* n = new RankRoot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankRoot::Clear() {
// @@protoc_insertion_point(message_clear_start:prism.RankRoot)
  count_ = 0;
  roots_.Clear();
}

bool RankRoot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.RankRoot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prism.Root roots = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_roots:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_roots()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_roots;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.RankRoot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.RankRoot)
  return false;
#undef DO_
}

void RankRoot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prism.RankRoot)
  // repeated .prism.Root roots = 1;
  for (unsigned int i = 0, n = this->roots_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->roots(i), output);
  }

  // optional int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:prism.RankRoot)
}

::google::protobuf::uint8* RankRoot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prism.RankRoot)
  // repeated .prism.Root roots = 1;
  for (unsigned int i = 0, n = this->roots_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->roots(i), false, target);
  }

  // optional int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prism.RankRoot)
  return target;
}

int RankRoot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:prism.RankRoot)
  int total_size = 0;

  // optional int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // repeated .prism.Root roots = 1;
  total_size += 1 * this->roots_size();
  for (int i = 0; i < this->roots_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->roots(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankRoot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prism.RankRoot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankRoot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankRoot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.RankRoot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.RankRoot)
    MergeFrom(*source);
  }
}

void RankRoot::MergeFrom(const RankRoot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prism.RankRoot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  roots_.MergeFrom(from.roots_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void RankRoot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prism.RankRoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankRoot::CopyFrom(const RankRoot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prism.RankRoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankRoot::IsInitialized() const {

  return true;
}

void RankRoot::Swap(RankRoot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankRoot::InternalSwap(RankRoot* other) {
  roots_.UnsafeArenaSwap(&other->roots_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankRoot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankRoot_descriptor_;
  metadata.reflection = RankRoot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankRoot

// repeated .prism.Root roots = 1;
int RankRoot::roots_size() const {
  return roots_.size();
}
void RankRoot::clear_roots() {
  roots_.Clear();
}
const ::prism::Root& RankRoot::roots(int index) const {
  // @@protoc_insertion_point(field_get:prism.RankRoot.roots)
  return roots_.Get(index);
}
::prism::Root* RankRoot::mutable_roots(int index) {
  // @@protoc_insertion_point(field_mutable:prism.RankRoot.roots)
  return roots_.Mutable(index);
}
::prism::Root* RankRoot::add_roots() {
  // @@protoc_insertion_point(field_add:prism.RankRoot.roots)
  return roots_.Add();
}
::google::protobuf::RepeatedPtrField< ::prism::Root >*
RankRoot::mutable_roots() {
  // @@protoc_insertion_point(field_mutable_list:prism.RankRoot.roots)
  return &roots_;
}
const ::google::protobuf::RepeatedPtrField< ::prism::Root >&
RankRoot::roots() const {
  // @@protoc_insertion_point(field_list:prism.RankRoot.roots)
  return roots_;
}

// optional int32 count = 2;
void RankRoot::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 RankRoot::count() const {
  // @@protoc_insertion_point(field_get:prism.RankRoot.count)
  return count_;
}
 void RankRoot::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:prism.RankRoot.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prism

// @@protoc_insertion_point(global_scope)
